{"version":3,"file":"static/js/973.ae3c447d.chunk.js","mappings":"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","sources":["pages/dashboard/AdminDashboard.tsx"],"sourcesContent":["/**\n * AdminDashboard Component:\n * Renders the admin dashboard with various analytics and statistics.\n * Fetches data related to leads count, source analytics, and course analytics.\n * Displays charts and visual representations of the data using ApexCharts.\n * Provides information about different types of leads and their counts.\n * Shows top courses purchased and calls made using bar and line charts.\n * Presents source analytics in a bar chart.\n */\n\nimport {\n  Box,\n  Divider,\n  HStack,\n  Image,\n  SimpleGrid,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport totalleads from \"../../icons/totalleads.svg\";\nimport openleads from \"../../icons/openleads.svg\";\nimport finalleads from \"../../icons/finalleads.svg\";\nimport hotleads from \"../../icons/hotleads.svg\";\nimport unsubscribe from \"../../icons/unsubscribe.svg\";\nimport wronglead from \"../../icons/wronglead.svg\";\nimport enrolled from \"../../icons/enrolled.svg\";\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData } from \"../../redux/actions/common.action\";\n\n// Define the shape of the analytics data\ninterface Analytics {\n  leadscount: {\n    totalLeads: number;\n    openLeads: number;\n    finalLeads: number;\n    hotLeads: number;\n    wrongLeads: number;\n  }[];\n  sourceanalytics: {\n    _id: string;\n    leads: number;\n  }[];\n  courseanalytics: {\n    _id: string;\n    count: number;\n  }[];\n}\n\nconst AdminDashboard = () => {\n  // Retrieve data from the Redux store\n  const { leadscount, sourceanalytics, courseanalytics } = useSelector(\n    (state: { common: Analytics }) => state.common\n  );\n\n  const dispatch: any = useDispatch();\n\n  // Fetch data from the API on component mount\n  useEffect(() => {\n    dispatch(getData(\"dashboard/leads-count\"));\n    dispatch(getData(\"dashboard/analytics\"));\n    dispatch(getData(\"dashboard/source\"));\n  }, [dispatch]);\n\n  // Extract categories and data for course analytics\n  const categoriestoshow = courseanalytics\n    ?.map((item) => item._id)\n    .filter((id) => id !== null);\n  const categoriesdatacourse = courseanalytics?.map((item) => item.count);\n\n  // Extract categories and data for source analytics\n  const categoriestoshowSource = sourceanalytics\n    ?.map((item) => item._id)\n    .filter((id) => id !== null);\n  const categoriesdatasource = sourceanalytics?.map((item) => item.leads);\n\n  // Calculate the total count for course analytics\n  const totalCount = categoriesdatacourse.reduce(\n    (total, count) => total + count,\n    0\n  );\n\n  // Calculate the percentage for each count value in course analytics\n  const percentages = categoriesdatacourse.map(\n    (count) => (count / totalCount) * 100\n  );\n\n  const leadsData = [\n    {\n      icons: totalleads,\n      name: \"Total Leads\",\n      amount: 13258000,\n      numofLeads: leadscount && leadscount[0]?.totalLeads,\n      color: \"#37AE00\",\n    },\n    {\n      icons: openleads,\n      name: \"Open Leads\",\n      amount: 13258000,\n      numofLeads: leadscount && leadscount[0]?.openLeads,\n      color: \"#E27A00\",\n    },\n    {\n      icons: finalleads,\n      name: \"Final Leads\",\n      amount: 13258000,\n      numofLeads: leadscount && leadscount[0]?.finalLeads,\n      color: \"#1243A0\",\n    },\n    {\n      icons: hotleads,\n      name: \"Hot Leads\",\n      amount: 13258000,\n      numofLeads: leadscount && leadscount[0]?.hotLeads,\n      color: \"#5B5B60\",\n    },\n    {\n      icons: unsubscribe,\n      name: \"Unsubscribed\",\n      amount: 13258000,\n      numofLeads: 0,\n      color: \"#FFBF00\",\n    },\n    {\n      icons: wronglead,\n      name: \"Wrong Leads\",\n      amount: 13258000,\n      numofLeads: leadscount && leadscount[0]?.wrongLeads,\n      color: \"#FF0000\",\n    },\n    {\n      icons: enrolled,\n      name: \"Enrolled\",\n      amount: 13258000,\n      numofLeads: 5000,\n      color: \"#8580C2\",\n    },\n  ];\n\n  const [data, setData] = useState([\n    75, 90, 60, 85, 70, 80, 95, 75, 90, 60, 85, 70, 80,\n  ]);\n\n  const [datas, setDatas] = useState([\n    75, 90, 60, 85, 70, 80, 95, 75, 90, 60, 85, 70, 80,\n  ]);\n  const [categories, setCategories] = useState([]);\n\n  const colors: any = [\"#ff0000\", \"#00ff00\", \"#0000ff\", \"#ffff00\", \"#ff00ff\"];\n  let curve: any = \"smooth\";\n\n  const options = {\n    chart: {\n      id: \"horizontal-bar\",\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        distributed: true,\n      },\n    },\n    xaxis: {\n      categories: categoriestoshow,\n    },\n    yaxis: {\n      type: \"logarithmic\",\n      labels: {\n        style: {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    colors: [\n      \"#33b2df\",\n      \"#546E7A\",\n      \"#d4526e\",\n      \"#13d8aa\",\n      \"#A5978B\",\n      \"#2b908f\",\n      \"#f9a3a4\",\n      \"#90ee7e\",\n      \"#f48024\",\n      \"#69d2e7\",\n    ],\n  };\n\n  const options2: ApexOptions = {\n    chart: {\n      type: \"line\",\n      height: 350,\n      toolbar: {\n        show: false,\n      },\n    },\n    stroke: {\n      width: 3,\n      curve: \"smooth\",\n      colors: [\"#ff9800\"], // Orange color\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        colors: colors,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    xaxis: {\n      categories: categories,\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n  };\n\n  const series = [\n    {\n      data: categoriesdatacourse,\n    },\n  ];\n\n  const series_source = [\n    {\n      data: categoriesdatasource,\n    },\n  ];\n\n  const options3: ApexOptions = {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"40%\",\n        distributed: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    xaxis: {\n      categories: categoriestoshowSource,\n    },\n    yaxis: {\n      labels: {\n        style: {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    colors: [\n      \"#d4526e\",\n      \"#546E7A\",\n      \"#13d8aa\",\n      \"#A5978B\",\n      \"#2b908f\",\n      \"#33b2df\",\n      \"#90ee7e\",\n      \"#f48024\",\n      \"#f9a3a4\",\n      \"#69d2e7\",\n    ],\n  };\n\n  return (\n    <Stack>\n      {/* Displaying the leads data */}\n      <SimpleGrid\n        columns={{ base: 2, sm: 2, md: 3, lg: 4 }}\n        gap=\"0.5rem\"\n        bg=\"gray.200\"\n        pb=\"2\"\n      >\n        {leadsData?.map((el, i) => (\n          <Box\n            h=\"3.7rem\"\n            px=\"4\"\n            py=\"1\"\n            borderRadius={\"0.25rem\"}\n            bg=\"whiteAlpha.900\"\n          >\n            <HStack>\n              <Box>\n                <Text\n                  fontSize={\"0.9rem\"}\n                  padding={1}\n                  fontWeight={\"800\"}\n                  color={el.color}\n                >\n                  ₹ {el.amount}\n                </Text>\n                <Text fontSize={\"0.95rem\"} fontWeight={600}>\n                  {el.name}{\" \"}\n                  <span style={{ fontWeight: \"400\", marginTop: \"8px\" }}>\n                    {el.numofLeads}\n                  </span>{\" \"}\n                </Text>\n              </Box>\n              <Spacer />\n              <Box mt=\"0\">\n                <Image\n                  mt={\"0\"}\n                  borderRadius=\"full\"\n                  boxSize=\"40px\"\n                  src={el.icons}\n                  alt=\"error Icons\"\n                />\n              </Box>\n            </HStack>\n          </Box>\n        ))}\n      </SimpleGrid>\n\n      {/* Displaying top courses purchased */}\n      <Stack py=\"1\" mt=\"2\" bg=\"whiteAlpha.900\" borderRadius={\"0.25rem\"}>\n        <SimpleGrid columns={{ sm: 1, md: 2 }} gap=\"0.8rem\" px=\"2\">\n          <Box bg=\"gray.100\" p=\"1\" borderRadius={\"5\"}>\n            <Text ml=\"4\" mb=\"-2\" fontSize={\"1rem\"} fontWeight={700}>\n              Top Courses Purchased\n            </Text>\n            <Chart\n              options={options}\n              series={series}\n              type=\"bar\"\n              height=\"370\"\n              width=\"100%\"\n            />\n          </Box>\n          <Box bg=\"gray.100\" p=\"1\" borderRadius={5}>\n            <Text ml=\"4\" mb=\"-2\" fontSize={\"1rem\"} fontWeight={700}>\n              Calls Made\n            </Text>\n            <Chart\n              options={options2}\n              series={series}\n              type=\"line\"\n              height=\"400\"\n              width=\"100%\"\n            />\n          </Box>\n        </SimpleGrid>\n        <Divider />\n        <Box>\n          <Text ml=\"4\" mb=\"-2\" fontSize={\"1rem\"} fontWeight={700}>\n            Source\n          </Text>\n          <Chart\n            options={options3}\n            series={series_source}\n            type=\"bar\"\n            height=\"400\"\n            width=\"100%\"\n          />\n        </Box>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default AdminDashboard;\n"],"names":["_leadscount$","_leadscount$2","_leadscount$3","_leadscount$4","_leadscount$5","_useSelector","useSelector","state","common","leadscount","sourceanalytics","courseanalytics","dispatch","useDispatch","useEffect","getData","categoriestoshow","map","item","_id","filter","id","categoriesdatacourse","count","categoriestoshowSource","categoriesdatasource","leads","totalCount","reduce","total","leadsData","icons","totalleads","name","amount","numofLeads","totalLeads","color","openleads","openLeads","finalleads","finalLeads","hotleads","hotLeads","unsubscribe","wronglead","wrongLeads","enrolled","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","categories","options","chart","toolbar","show","plotOptions","bar","horizontal","distributed","xaxis","yaxis","type","labels","style","fontWeight","colors","options2","height","stroke","width","curve","columnWidth","dataLabels","enabled","series","data","series_source","options3","_jsxs","Stack","children","_jsx","SimpleGrid","columns","base","sm","md","lg","gap","bg","pb","el","i","Box","h","px","py","borderRadius","HStack","Text","fontSize","padding","marginTop","Spacer","mt","Image","boxSize","src","alt","p","ml","mb","Chart","Divider"],"sourceRoot":""}
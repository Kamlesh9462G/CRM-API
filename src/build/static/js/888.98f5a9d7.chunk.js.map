{"version":3,"file":"static/js/888.98f5a9d7.chunk.js","mappings":"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","sources":["components/AlertDialouge.tsx","components/Loader.tsx","pages/leads/LeadList.tsx"],"sourcesContent":["// AlertDialogDelete Component: Displays a delete confirmation dialog using Chakra UI.\n// Props:\n// - handleDelete: Function to handle the delete action when confirmed.\n// - id: The identifier of the item to delete.\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { useSelector } from \"react-redux\";\ninterface Props {\n  handleDelete: (id: number) => void;\n  id: number;\n}\n\ninterface Loading {\n  loading: boolean;\n}\n\nconst AlertDialogDelete: React.FC<Props> = ({ handleDelete, id }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const { loading } = useSelector((state: { common: Loading }) => state.common);\n  const onDeleteClick = () => {\n    handleDelete(id);\n    onClose();\n  };\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <RiDeleteBinLine color=\"red\" size={18} cursor={\"pointer\"} />\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Delete\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure? You can't undo this action afterwards.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                size=\"sm\"\n                fontWeight={\"medium\"}\n                ref={cancelRef}\n                onClick={onClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"sm\"\n                fontWeight={\"medium\"}\n                isLoading={loading}\n                loadingText=\"Please wait...\"\n                colorScheme=\"red\"\n                onClick={onDeleteClick}\n                ml={3}\n              >\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default AlertDialogDelete;\n","// Loader Component: Displays a loader spinner within a table row using react-loader-spinner and Chakra UI.\nimport { HStack, Td, Tr } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ColorRing } from \"react-loader-spinner\";\n\nconst Loader = () => {\n  return (\n    <Tr height={400} maxHeight=\"400px\">\n      <Td colSpan={25}>\n        <HStack justifyContent=\"center\" alignItems=\"center\" w=\"100%\">\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\n          />\n        </HStack>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default Loader;\n","// declare module \"react-date-range\";\nimport { Box, Button, Input,  InputGroup,  InputLeftElement,  Select,  SimpleGrid,  Stack, Table, TableContainer, Tbody, Td, Text,  Th, Thead, Tr, useToast } from '@chakra-ui/react'\n\nimport totalleads from '../../icons/totalleads.svg'\nimport openleads from '../../icons/openleads.svg'\nimport finalleads from '../../icons/finalleads.svg'\nimport hotleads from '../../icons/hotleads.svg'\nimport unsubscribe from '../../icons/unsubscribe.svg'\nimport wronglead from '../../icons/wronglead.svg'\nimport enrolled from '../../icons/enrolled.svg'\nimport  {DateRange}  from \"react-date-range\";\n\n\nimport format from \"date-fns/format\";\n\n\nimport \"react-date-range/dist/styles.css\";\nimport \"react-date-range/dist/theme/default.css\";\nimport { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteData, getData } from '../../redux/actions/common.action'\nimport { MultiSelect } from 'react-multi-select-component'\nimport Loader from '../../components/Loader'\nimport { SearchIcon } from '@chakra-ui/icons'\nimport axios from 'axios'\nimport { formatISO } from 'date-fns'\nimport AlertDialogDelete from '../../components/AlertDialouge'\nimport { CiEdit } from 'react-icons/ci'\nimport { RiDeleteBinLine } from 'react-icons/ri'\nimport { FiEdit } from 'react-icons/fi'\nimport { useNavigate } from 'react-router-dom'\n\nconst LeadList = () => {\n  const { loading, cities, sources, statuses, branches, courses, users } =\n    useSelector((state: any) => state.common);\n\n\n  const dispatch: any = useDispatch();\n  const navigate=useNavigate();\n  useEffect(() => {\n    dispatch(getData(\"branch\"));\n    dispatch(getData(\"user\"));\n    dispatch(getData(\"source\"));\n    dispatch(getData(\"city\"));\n    dispatch(getData(\"status\"));\n    dispatch(getData(\"course\"));\n  }, []);\n\n  const [city, setCities] = useState<Option[]>([]);\n  const [citylist, setCityList] = useState<string>(\"\");\n\n  const [source, setSource] = useState<Option[]>([]);\n  const [sourcelist, setSourceList] = useState<string>(\"\");\n  const [status, setStatus] = useState<Option[]>([\n    { value: \"6369252dd85a641f10cdf4f2\", label: \"Open\" },\n    { value: \"6369252dd85a641f10cdf4f6\", label: \"Final Lead\" },\n    { value: \"6369252dd85a641f10cdf4f8\", label: \"Hot Lead\" },\n  ]);\n  const [statuslist, setStatusList] = useState<string>(\"\");\n  const [branch, setBranch] = useState<Option[]>([]);\n  const [branchlist, setBranchList] = useState<string>(\"\");\n  const [course, setCourse] = useState<Option[]>([]);\n  const [courselist, setCourseList] = useState<string>(\"\");\n  console.log(courselist, \"ok\");\n  const [user, setUser] = useState<Option[]>([]);\n  const [userlist, setUserList] = useState<string>(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState<string>(\"\");\n  const [limit, setLimit] = useState<number>(100);\n  //  console.log(filteredData,\"ok\")\n\n  const [followUpStart, setfollowUpStart] = useState([\n    {\n      startDate: null,\n      endDate: null,\n      key: \"selection\",\n    },\n  ]);\n  const [enquiryDate, setEnqDate] = useState([\n    {\n      startDate: null,\n      endDate: null,\n      key: \"selection\",\n    },\n  ]);\n\n  // open close\n  const [open, setOpen] = useState(false);\n  const [openenq, setOpenenq] = useState(false);\n\n  // get the target element to toggle\n  const refOne = useRef<HTMLDivElement>(null);\n  const refTwo = useRef<HTMLDivElement>(null);\n  interface Option {\n    value: string;\n    label: string;\n  }\n\n  const hideOnEscape = (e: KeyboardEvent) => {\n    if (e.key === \"Escape\") {\n      setOpen(false);\n      setOpenenq(false);\n    }\n  };\n\n  //Hide on outside click\n  const hideOnClickOutside = (e: MouseEvent) => {\n    // console.log(refOne.current)\n    // console.log(e.target)\n    if (refOne.current && !refOne.current.contains(e.target as Node)) {\n      setOpen(false);\n    }\n    if (refTwo.current && !refTwo.current.contains(e.target as Node)) {\n      setOpenenq(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", hideOnEscape);\n    document.addEventListener(\"mousedown\", hideOnClickOutside);\n\n    return () => {\n      document.removeEventListener(\"keydown\", hideOnEscape);\n      document.removeEventListener(\"mousedown\", hideOnClickOutside);\n    };\n  }, []);\n\n  interface City {\n    _id: string;\n    CityName: string;\n  }\n\n  interface Source {\n    _id: string;\n    SourceName: string;\n  }\n\n  interface Status {\n    _id: string;\n    StatusName: string;\n  }\n  interface Branch {\n    _id: string;\n    BranchName: string;\n  }\n  interface Course {\n    _id: string;\n    CourseName: string;\n  }\n  interface User {\n    _id: string;\n    Name: string;\n  }\n\n  const cityOptions: Option[] = cities?.map((city: City) => ({\n    value: city._id,\n    label: city.CityName,\n  }));\n  const sourceOptions: Option[] = sources?.map((source: Source) => ({\n    value: source._id,\n    label: source.SourceName,\n  }));\n  const statusOptions: Option[] = statuses?.map((status: Status) => ({\n    value: status._id,\n    label: status.StatusName,\n  }));\n  const branchOptions: Option[] = branches?.map((branch: Branch) => ({\n    value: branch._id,\n    label: branch.BranchName,\n  }));\n  const courseOptions: Option[] = courses?.map((course: Course) => ({\n    value: course._id,\n    label: course.CourseName,\n  }));\n  const userOptions: Option[] = users?.map((user: User) => ({\n    value: user._id,\n    label: user.Name,\n  }));\n\n  const url = `https://crm-new.toppersmaterial.com/v1/admin/lead/?City=${citylist}&Source=${sourcelist}&Status=${statuslist}&Branch=${branchlist}&AssignTo=${userlist}&enquiryCourse=${courselist}&limit=${limit}&page=${page}&keyword=${search}`;\n\n  function debounce(func: Function, delay: number) {\n    let timeoutId: ReturnType<typeof setTimeout>;\n    return (...args: any[]) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func(...args), delay);\n    };\n  }\n  const followUpStartISO = followUpStart[0].startDate\n    ? formatISO(followUpStart[0].startDate)\n    : \"\";\n\n  const followStartforamtted = new Date(followUpStartISO);\n\nconst handleFilterSubmit = async (): Promise<void> => {\n  try {\n    setIsLoading(true);\n    const token = localStorage.getItem(\"token\"); \n    const url = `https://crm-new.toppersmaterial.com/v1/admin/lead/?City=${citylist}&Source=${sourcelist}&Status=${statuslist}&Branch=${branchlist}&AssignTo=${userlist}&Course=${courselist}&limit=${limit}&page=${page}&keyword=${search}`;\n\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token}`, // Pass the token in the headers\n      },\n    });\n\n    setFilteredData(res.data.Data);\n    setTotalPages(res.data.totalPages);\n    setIsLoading(false);\n  } catch (error) {\n    setIsLoading(false);\n    console.error(error);\n  }\n};\n\n  // Debounce the handleFilterSubmit function by 1 second\n  const debouncedHandleFilterSubmit = debounce(handleFilterSubmit, 1000);\n  useEffect(() => {\n    debouncedHandleFilterSubmit();\n  }, [\n    citylist,\n    sourcelist,\n    statuslist,\n    branchlist,\n    userlist,\n    courselist,\n    page,\n    limit,\n    followUpStart,\n    enquiryDate,\n  ]);\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n    debouncedHandleFilterSubmit();\n  };\n  const handlePageChange = (pageNumber: number) => {\n    if (pageNumber < 1 || pageNumber > totalPages) {\n      return;\n    }\n    setPage(pageNumber);\n  };\nconst endpoint:string='lead'\nconst toast=useToast();\n  const handleDelete = async (id: number) => {\n    await dispatch(deleteData(id, endpoint,toast));\n    handleFilterSubmit();\n  };\n  return (\n    <Stack>\n      {/* <SimpleGrid columns={4} gap=\"0.5rem\">\n  \n      </SimpleGrid> */}\n\n      <Stack py=\"1\" bg=\"whiteAlpha.900\" borderRadius={\"0.25rem\"}>\n        <SimpleGrid columns={{ sm: 2, md: 3, lg: 4 }} gap=\"0.5rem\" px=\"2\">\n          <Box>\n            <Text\n              fontSize={\"0.8rem\"}\n              ml=\"2\"\n              mb=\"0.1\"\n              fontWeight=\"500\"\n              color=\"black.600\"\n            >\n              City\n            </Text>\n            <MultiSelect\n              className=\"rmsc\"\n              options={cityOptions}\n              value={city}\n              onChange={(value: Option[]) => {\n                setCities(value);\n                setCityList(value?.map((city: Option) => city.label).join(\",\"));\n              }}\n              labelledBy=\"Select City\"\n            />\n          </Box>\n          <Box>\n            <Text\n              fontSize={\"0.8rem\"}\n              ml=\"2\"\n              mb=\"0.1\"\n              fontWeight=\"500\"\n              color=\"black.600\"\n            >\n              Source\n            </Text>\n            <MultiSelect\n              className=\"rmsc\"\n              options={sourceOptions}\n              value={source}\n              onChange={(value: Option[]) => {\n                setSource(value);\n                console.log(value);\n                setSourceList(\n                  value?.map((source: Option) => source.label).join(\",\")\n                );\n              }}\n              labelledBy=\"Select Source\"\n            />\n          </Box>\n          <Box>\n            <Text\n              fontSize={\"0.8rem\"}\n              ml=\"2\"\n              mb=\"0.1\"\n              fontWeight=\"500\"\n              color=\"black.600\"\n            >\n              Status\n            </Text>\n            <MultiSelect\n              className=\"rmsc\"\n              options={statusOptions}\n              value={status}\n              onChange={(value: Option[]) => {\n                setStatus(value);\n                console.log(value);\n                setStatusList(\n                  value?.map((status: Option) => status.label).join(\",\")\n                );\n              }}\n              labelledBy=\"Select Source\"\n            />\n          </Box>\n          <Box>\n            <Text\n              fontSize={\"0.8rem\"}\n              ml=\"2\"\n              mb=\"0.1\"\n              fontWeight=\"500\"\n              color=\"black.600\"\n            >\n              Branch\n            </Text>\n            <MultiSelect\n              className=\"rmsc\"\n              options={branchOptions}\n              value={branch}\n              onChange={(value: Option[]) => {\n                setBranch(value);\n                console.log(value);\n                setBranchList(\n                  value?.map((branch: Option) => branch.label).join(\",\")\n                );\n              }}\n              labelledBy=\"Select Source\"\n            />\n          </Box>\n\n          <Box>\n            <Text\n              fontSize={\"0.8rem\"}\n              ml=\"2\"\n              mb=\"0.1\"\n              fontWeight=\"500\"\n              color=\"black.600\"\n            >\n              Course\n            </Text>\n            <MultiSelect\n              className=\"rmsc\"\n              options={courseOptions}\n              value={course}\n              onChange={(value: Option[]) => {\n                setCourse(value);\n                console.log(value);\n                setCourseList(\n                  value?.map((branch: Option) => branch.label).join(\",\")\n                );\n              }}\n              labelledBy=\"Select course\"\n            />\n          </Box>\n          <Box>\n            <Text\n              fontSize={\"0.8rem\"}\n              ml=\"2\"\n              mb=\"\"\n              fontWeight=\"500\"\n              color=\"black.600\"\n            >\n              Assign To\n            </Text>\n            <MultiSelect\n              className=\"rmsc\"\n              options={userOptions}\n              value={user}\n              onChange={(value: Option[]) => {\n                setUser(value);\n                console.log(value);\n                setUserList(value?.map((user: Option) => user.label).join(\",\"));\n              }}\n              labelledBy=\"Select user\"\n            />\n          </Box>\n          <Box>\n            <div className=\"calendarWrap\">\n              <Text\n                fontSize={\"0.8rem\"}\n                ml=\"2\"\n                mb=\"\"\n                fontWeight=\"500\"\n                color=\"black.600\"\n              >\n                Follow Up Date\n              </Text>\n              <Input\n                borderColor={\"#A0AEC0\"}\n                size=\"sm\"\n                borderRadius={\"0.25rem\"}\n                w=\"full\"\n                h=\"27px\"\n                placeholder=\"Select date\"\n                value={\n                  followUpStart[0].startDate && followUpStart[0].endDate\n                    ? `${format(\n                        followUpStart[0].startDate,\n                        \"dd/MM/yyyy\"\n                      )} to ${format(followUpStart[0].endDate, \"dd/MM/yyyy\")}`\n                    : \"\"\n                }\n                readOnly\n                onClick={() => setOpen((open) => !open)}\n              />\n\n              <div ref={refOne}>\n                {open && (\n                  <DateRange\n                    onChange={(item: any) => setfollowUpStart([item.selection])}\n                    editableDateInputs={true}\n                    moveRangeOnFirstSelection={false}\n                    ranges={followUpStart.map((r) => ({\n                      ...r,\n                      startDate: r.startDate || undefined,\n                      endDate: r.endDate || undefined,\n                    }))}\n                    direction=\"horizontal\"\n                    className=\"calendarElement\"\n                  />\n                )}\n              </div>\n            </div>\n          </Box>\n          <Box>\n            <div className=\"calendarWrap\">\n              <Text\n                fontSize={\"0.8rem\"}\n                ml=\"2\"\n                mb=\"\"\n                fontWeight=\"500\"\n                color=\"black.600\"\n              >\n                Enquiry Date\n              </Text>\n              <Input\n                borderColor={\"#A0AEC0\"}\n                size=\"sm\"\n                borderRadius={\"0.25rem\"}\n                w=\"full\"\n                h=\"27px\"\n                placeholder=\"Select date\"\n                value={\n                  enquiryDate[0].startDate && enquiryDate[0].endDate\n                    ? `${format(\n                        enquiryDate[0].startDate,\n                        \"dd/MM/yyyy\"\n                      )} to ${format(enquiryDate[0].endDate, \"dd/MM/yyyy\")}`\n                    : \"\"\n                }\n                readOnly\n                onClick={() => setOpenenq((openenq) => !openenq)}\n              />\n\n              <div ref={refTwo}>\n                {openenq && (\n                  <DateRange\n                    onChange={(item: any) => setEnqDate([item.selection])}\n                    editableDateInputs={true}\n                    moveRangeOnFirstSelection={false}\n                    ranges={enquiryDate.map((r) => ({\n                      ...r,\n                      startDate: r.startDate || undefined,\n                      endDate: r.endDate || undefined,\n                    }))}\n                    direction=\"horizontal\"\n                    className=\"calendarElement\"\n                  />\n                )}\n              </div>\n            </div>\n          </Box>\n        </SimpleGrid>\n      </Stack>\n\n      <Stack py=\"1\" bg=\"whiteAlpha.900\" borderRadius={\"0.25rem\"}>\n        <Box\n          px=\"4\"\n          display={\"flex\"}\n          justifyContent={\"space-between\"}\n          alignItems={\"center\"}\n        >\n          <Box>\n            <Select\n              borderRadius={\"0.25rem\"}\n              borderColor={\"gray.400\"}\n              size=\"xs\"\n              value={limit}\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                setLimit(parseInt(e.target.value, 10))\n              }\n            >\n              <option value={20}>20</option>\n              <option value={50}>50</option>\n              <option value={100}>100</option>\n              <option value={200}>200</option>\n            </Select>\n          </Box>\n          <Box>\n            <InputGroup>\n              <InputLeftElement pointerEvents=\"none\">\n                <SearchIcon color=\"gray.400\" mb=\"4\" />\n              </InputLeftElement>\n              <Input\n                value={search}\n                onChange={handleSearchChange}\n                borderRadius={\"0.25rem\"}\n                borderColor=\"gray.400\"\n                size=\"xs\"\n                type=\"text\"\n                placeholder=\"Search here...\"\n              />\n            </InputGroup>\n          </Box>\n        </Box>\n        <Box overflowX=\"auto\" className=\"shrinkable-table\">\n          <TableContainer className=\"tarun\" whiteSpace={\"nowrap\"}>\n            <Box overflowY=\"auto\" height={350} maxHeight=\"350px\">\n              <Table variant=\"striped\" colorScheme=\"gray\" size=\"sm\">\n                <Thead\n                  bg={\"blue.600\"}\n                  color={\"whiteAlpha.900\"}\n                  position={\"sticky\"}\n                  borderRadius={\"20px\"}\n                  top=\"0\"\n                >\n                  <Tr>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      UID\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Ass To\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Source\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      City\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Status\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Enq. Date\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Lfd\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Name\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Mob_1\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      course\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Price\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Days\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      follow up\n                    </Th>\n                    <Th\n                      padding={2}\n                      w={15}\n                      fontSize={\"0.65rem\"}\n                      color={\"whiteAlpha.900\"}\n                    >\n                      Action\n                    </Th>\n                  </Tr>\n                </Thead>\n                {isLoading ? (\n                  <Loader />\n                ) : (\n                  <Tbody>\n                    { filteredData?.length === 0 ? (\n                      <Tr>\n                        <Td colSpan={14} textAlign=\"center\" fontWeight={700}>\n                          No data found\n                        </Td>\n                      </Tr>\n                    ) : (\n                      filteredData?.map((el: any) => (\n                        <Tr key={el._id} fontSize={\"0.5rem\"}>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.UID}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.AssignTo}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.Source}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.City}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.Status}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {new Date(el.EnquiryDate).toLocaleDateString()}\n                          </Td>\n                          <Td\n                            fontSize={\"0.8rem\"}\n                            textAlign={\"center\"}\n                            padding={2}\n                            w={15}\n                          >\n                            {el.Days2}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.Name}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.Phone1}\n                          </Td>\n                          <Td\n                            fontSize={\"0.8rem\"}\n                            padding={2}\n                            w={15}\n                            textOverflow={\"ellipsis\"}\n                            overflow={\"hidden\"}\n                            whiteSpace={\"nowrap\"}\n                          >\n                            {/* {el.Course.length > 10 ? `${el.Course.slice(0, 10)}...` : el.Course} */}\n                            {el.Course}\n                          </Td>\n\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {el.CoursePrice}\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {\" \"}\n                            -180\n                          </Td>\n                          <Td fontSize={\"0.8rem\"} padding={2} w={15}>\n                            {new Date(el.EnquiryDate).toLocaleDateString()}\n                          </Td>\n                          <Td \n                            textAlign={\"center\"}\n                            fontSize={\"0.8rem\"}\n                            // padding={2}\n                            w={15}\n                          >\n                            {\" \"}\n                            <Box display={'flex'} gap='2'>\n\n                            <FiEdit color=\"blue\" size={16} cursor={'pointer'} onClick={()=>navigate(`/log/${el._id}`)}/>\n                           \n                            <AlertDialogDelete \n                            id={el._id}\n                            handleDelete={handleDelete}\n                          />\n                            </Box>\n                          </Td>\n                        </Tr>\n                      ))\n                    )}\n                  </Tbody>\n                )}\n              </Table>\n            </Box>\n          </TableContainer>\n        </Box>\n        <Box\n          display={\"flex\"}\n          justifyContent={\"flex-end\"}\n          gap={\"3\"}\n          px={3}\n          borderTop={\"1px gray.500\"}\n        >\n          <Button\n            size={\"xs\"}\n            onClick={() => handlePageChange(page - 1)}\n            colorScheme=\"gray\"\n            disabled={page === 1}\n            borderRadius={\"50%\"}\n            p={\"0.5rem 0\"}\n          >\n            &lt;\n          </Button>\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map(\n            (pageNumber) => {\n              if (\n                pageNumber <= 3 ||\n                (pageNumber >= page - 1 && pageNumber <= page + 1) ||\n                pageNumber > totalPages - 3\n              ) {\n                return (\n                  <Button\n                    size={\"xs\"}\n                    borderRadius={\"50%\"}\n                    p={\"0.5rem 0\"}\n                    key={pageNumber}\n                    onClick={() => handlePageChange(pageNumber)}\n                    disabled={page === pageNumber}\n                    colorScheme={page === pageNumber ? \"orange\" : \"gray\"}\n                  >\n                    {pageNumber}\n                  </Button>\n                );\n              } else if (pageNumber === 4 || pageNumber === totalPages - 2) {\n                return <Text key={pageNumber}>...</Text>;\n              } else {\n                return null;\n              }\n            }\n          )}\n\n          <Button\n            size={\"xs\"}\n            borderRadius={\"50%\"}\n            p={\"0.5rem 0\"}\n            onClick={() => handlePageChange(page + 1)}\n            disabled={page === totalPages}\n          >\n            &gt;\n          </Button>\n        </Box>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default LeadList\n"],"names":["_ref","handleDelete","id","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","cancelRef","React","loading","useSelector","state","common","_jsxs","_Fragment","children","_jsx","Box","onClick","RiDeleteBinLine","color","size","cursor","AlertDialog","leastDestructiveRef","AlertDialogOverlay","bg","backdropFilter","AlertDialogContent","AlertDialogHeader","fontSize","fontWeight","AlertDialogBody","AlertDialogFooter","Button","ref","isLoading","loadingText","colorScheme","ml","Tr","height","maxHeight","Td","colSpan","HStack","justifyContent","alignItems","w","ColorRing","visible","width","ariaLabel","wrapperStyle","wrapperClass","colors","_useSelector","cities","sources","statuses","branches","courses","users","dispatch","useDispatch","navigate","useNavigate","useEffect","getData","_useState","useState","_useState2","_slicedToArray","city","setCities","_useState3","_useState4","citylist","setCityList","_useState5","_useState6","source","setSource","_useState7","_useState8","sourcelist","setSourceList","_useState9","value","label","_useState10","status","setStatus","_useState11","_useState12","statuslist","setStatusList","_useState13","_useState14","branch","setBranch","_useState15","_useState16","branchlist","setBranchList","_useState17","_useState18","course","setCourse","_useState19","_useState20","courselist","setCourseList","console","log","_useState21","_useState22","user","setUser","_useState23","_useState24","userlist","setUserList","_useState25","_useState26","filteredData","setFilteredData","_useState27","_useState28","page","setPage","_useState29","_useState30","totalPages","setTotalPages","_useState31","_useState32","setIsLoading","_useState33","_useState34","search","setSearch","_useState35","_useState36","limit","setLimit","_useState37","startDate","endDate","key","_useState38","followUpStart","setfollowUpStart","_useState39","_useState40","enquiryDate","setEnqDate","_useState41","_useState42","open","setOpen","_useState43","_useState44","openenq","setOpenenq","refOne","useRef","refTwo","hideOnEscape","e","hideOnClickOutside","current","contains","target","document","addEventListener","removeEventListener","cityOptions","map","_id","CityName","sourceOptions","SourceName","statusOptions","StatusName","branchOptions","BranchName","courseOptions","CourseName","userOptions","Name","concat","followUpStartISO","formatISO","handleFilterSubmit","Date","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","_url","res","wrap","_context","prev","next","localStorage","getItem","url","axios","headers","Authorization","sent","data","Data","t0","error","stop","apply","arguments","debouncedHandleFilterSubmit","func","delay","timeoutId","_len","length","args","Array","_key","clearTimeout","setTimeout","debounce","handlePageChange","pageNumber","toast","useToast","_ref2","_callee2","_context2","deleteData","_x","Stack","py","borderRadius","SimpleGrid","columns","sm","md","lg","gap","px","Text","mb","MultiSelect","className","options","onChange","join","labelledBy","Input","borderColor","h","placeholder","format","readOnly","DateRange","item","selection","editableDateInputs","moveRangeOnFirstSelection","ranges","r","_objectSpread","undefined","direction","display","Select","parseInt","InputGroup","InputLeftElement","pointerEvents","SearchIcon","event","type","overflowX","TableContainer","whiteSpace","overflowY","Table","variant","Thead","position","top","Th","padding","Loader","Tbody","textAlign","el","UID","AssignTo","Source","City","Status","EnquiryDate","toLocaleDateString","Days2","Phone1","textOverflow","overflow","Course","CoursePrice","FiEdit","AlertDialogDelete","borderTop","disabled","p","from","_","i"],"sourceRoot":""}
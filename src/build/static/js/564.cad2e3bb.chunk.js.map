{"version":3,"file":"static/js/564.cad2e3bb.chunk.js","mappings":"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","sources":["components/AlertDialouge.tsx","components/Loader.tsx","pages/source/SourceList.tsx"],"sourcesContent":["// AlertDialogDelete Component: Displays a delete confirmation dialog using Chakra UI.\n// Props:\n// - handleDelete: Function to handle the delete action when confirmed.\n// - id: The identifier of the item to delete.\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { useSelector } from \"react-redux\";\ninterface Props {\n  handleDelete: (id: number) => void;\n  id: number;\n}\n\ninterface Loading {\n  loading: boolean;\n}\n\nconst AlertDialogDelete: React.FC<Props> = ({ handleDelete, id }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const { loading } = useSelector((state: { common: Loading }) => state.common);\n  const onDeleteClick = () => {\n    handleDelete(id);\n    onClose();\n  };\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <RiDeleteBinLine color=\"red\" size={18} cursor={\"pointer\"} />\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Delete\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure? You can't undo this action afterwards.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                size=\"sm\"\n                fontWeight={\"medium\"}\n                ref={cancelRef}\n                onClick={onClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"sm\"\n                fontWeight={\"medium\"}\n                isLoading={loading}\n                loadingText=\"Please wait...\"\n                colorScheme=\"red\"\n                onClick={onDeleteClick}\n                ml={3}\n              >\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default AlertDialogDelete;\n","// Loader Component: Displays a loader spinner within a table row using react-loader-spinner and Chakra UI.\nimport { HStack, Td, Tr } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ColorRing } from \"react-loader-spinner\";\n\nconst Loader = () => {\n  return (\n    <Tr height={400} maxHeight=\"400px\">\n      <Td colSpan={25}>\n        <HStack justifyContent=\"center\" alignItems=\"center\" w=\"100%\">\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\n          />\n        </HStack>\n      </Td>\n    </Tr>\n  );\n};\n\nexport default Loader;\n","/*\n  SourceList Component:\n  This component displays a list of source fetched from the API. It provides the ability to add, update, and delete cities.\n  It utilizes Chakra UI components for the table layout and styling.\n\n  It does the following:\n  - Imports necessary dependencies and components\n  - Defines the interface for source lists\n  - Retrieves the sources and loading state from Redux using the useSelector hook\n  - Initializes the dispatch function from Redux using the useDispatch hook\n  - Initializes the navigate function from react-router-dom for navigation purposes\n  - Defines the endpoint for API calls\n  - Initializes the useToast hook for displaying toast messages\n  - Fetches source data when the component mounts, only if there are no sources present\n  - Handles the delete operation for a source by dispatching the deleteData action and fetching updated source data\n  - Renders the source list table using Chakra UI components, including table headers and rows\n  - Displays a loader while data is being fetched\n  - Provides buttons for adding a new source, refreshing the source list, and deleting a source with a confirmation dialog\n*/\nimport React, { useEffect, useMemo } from \"react\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Spacer,\n  Stack,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { deleteData, getData } from \"../../redux/actions/common.action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AlertDialogDelete from \"../../components/AlertDialouge\";\nimport { CiEdit } from \"react-icons/ci\";\nimport Loader from \"../../components/Loader\";\nimport { FiRefreshCcw } from \"react-icons/fi\";\ninterface SourceLists {\n  loading: boolean;\n  sources: {\n    serialNumber: number;\n    createdAt: string;\n    SourceName: number;\n    Description: string;\n    _id: number;\n  }[];\n}\nconst SourceList: React.FC = () => {\n  // Accessing the 'sources' and 'loading' state from the common reducer\n  const { sources, loading } = useSelector(\n    (state: { common: SourceLists }) => state.common\n  );\n  console.log(sources);\n\n  // Accessing necessary hooks and variables\n  const dispatch: any = useDispatch();\n  const Navigate = useNavigate();\n  const endpoint: string = \"source\";\n  const toast = useToast();\n\n  // Memoizing the 'sources' array using useMemo hook\n  const memoizedBranches = useMemo(() => sources, [sources]);\n\n  // useEffect hook to fetch data if 'memoizedBranches' is empty\n  useEffect(() => {\n    if (memoizedBranches.length === 0) {\n      dispatch(getData(endpoint));\n    }\n  }, [dispatch, endpoint, memoizedBranches.length]);\n\n  // Function to handle delete action\n  const handleDelete = async (id: number) => {\n    await dispatch(deleteData(id, endpoint, toast));\n    dispatch(getData(endpoint));\n  };\n\n  return (\n    <Stack h=\"100%\" mt={1}>\n      <Box\n        px={10}\n        h=\"40px\"\n        display={\"flex\"}\n        justifyContent={\"space-between\"}\n        alignItems={\"center\"}\n      >\n        {\" \"}\n        {/* <Text color={\"#000000\"} fontSize={\"1.25rem\"} fontWeight={\"600\"}>\n          Source List\n        </Text> */}\n        <Spacer />\n        <Button\n          mt={2}\n          onClick={() => Navigate(\"/add-source\")}\n          size={\"sm\"}\n          _hover={{ bg: \"#FF9000\" }}\n          w=\"7.188rem\"\n          bg=\"#FF9000\"\n          borderRadius={\"0.25rem\"}\n          color=\"whiteAlpha.900\"\n          fontWeight={\"700\"}\n          fontSize={\"1rem\"}\n        >\n          {\" \"}\n          Add Source\n        </Button>\n        <Box mt=\"2\" ml=\"3\">\n          <Button\n            size={\"xs\"}\n            borderRadius={\"full\"}\n            onClick={() => dispatch(getData(endpoint))}\n          >\n            <FiRefreshCcw />\n          </Button>\n        </Box>\n      </Box>\n      <Divider\n        bg=\"gray.300\" // Set the background color to dark gray\n        height=\"2px\" // Set the height of the divider\n      />\n      <TableContainer px=\"2\">\n        <Box overflowY=\"auto\" height={480} maxHeight=\"480px\">\n          <Table variant=\"simple\" size=\"sm\">\n            <Thead bg={\"gray.100\"} position={\"sticky\"} top=\"0\">\n              <Tr>\n                <Th>#</Th>\n                <Th>Date Created</Th>\n                <Th>Source Name</Th>\n                <Th>Description</Th>\n                <Th>Action</Th>\n              </Tr>\n            </Thead>\n            {loading ? (\n              <Loader />\n            ) : (\n              <Tbody>\n                {sources?.map((el, i) => (\n                  <Tr key={el._id}>\n                    <Td>{i + 1}</Td>\n                    <Td>{new Date(el.createdAt).toLocaleDateString()}</Td>\n                    <Td>{el.SourceName}</Td>\n                    <Td>{el.Description}</Td>\n                    {/* onClick={() => handleDelete(el._id)} */}\n                    <Td display={\"flex\"} alignItems={\"center\"}>\n                      <Box\n                        cursor={\"pointer\"}\n                        mr={\"5\"}\n                        onClick={() => Navigate(`/update-source/${el._id}`)}\n                      >\n                        <CiEdit color=\"blue\" size={19} />\n                      </Box>\n                      <Box cursor={\"pointer\"}>\n                        <AlertDialogDelete\n                          id={el._id}\n                          handleDelete={handleDelete}\n                        />\n                      </Box>\n                    </Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            )}\n          </Table>\n        </Box>\n      </TableContainer>\n    </Stack>\n  );\n};\n\nexport default SourceList;\n"],"names":["_ref","handleDelete","id","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","cancelRef","React","loading","useSelector","state","common","_jsxs","_Fragment","children","_jsx","Box","onClick","RiDeleteBinLine","color","size","cursor","AlertDialog","leastDestructiveRef","AlertDialogOverlay","bg","backdropFilter","AlertDialogContent","AlertDialogHeader","fontSize","fontWeight","AlertDialogBody","AlertDialogFooter","Button","ref","isLoading","loadingText","colorScheme","ml","Tr","height","maxHeight","Td","colSpan","HStack","justifyContent","alignItems","w","ColorRing","visible","width","ariaLabel","wrapperStyle","wrapperClass","colors","_useSelector","sources","console","log","dispatch","useDispatch","Navigate","useNavigate","endpoint","toast","useToast","memoizedBranches","useMemo","useEffect","length","getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","deleteData","stop","_x","apply","arguments","Stack","h","mt","px","display","Spacer","_hover","borderRadius","FiRefreshCcw","Divider","TableContainer","overflowY","Table","variant","Thead","position","top","Th","Loader","Tbody","map","el","i","Date","createdAt","toLocaleDateString","SourceName","Description","mr","concat","_id","CiEdit","AlertDialogDelete"],"sourceRoot":""}
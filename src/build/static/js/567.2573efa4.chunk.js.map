{"version":3,"file":"static/js/567.2573efa4.chunk.js","mappings":"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","sources":["pages/user/UserDetails.tsx","../node_modules/@chakra-ui/layout/dist/chunk-IWVFML3N.mjs","../node_modules/@chakra-ui/layout/dist/chunk-YGVX4ESO.mjs"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Grid,\r\n  GridItem,\r\n  Image,\r\n  Spacer,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getData } from \"../../redux/actions/common.action\";\r\nimport { FiRefreshCcw } from \"react-icons/fi\";\r\n\r\nconst UserDetails: React.FC = () => {\r\n  // Accessing the Redux dispatch function\r\n  const dispatch: any = useDispatch();\r\n\r\n  // Setting the endpoint for API requests\r\n  const endpoint: string = \"user\";\r\n\r\n  return (\r\n    <Stack h=\"100%\" mt={1}>\r\n      <Box\r\n        px={10}\r\n        h=\"40px\"\r\n        display={\"flex\"}\r\n        justifyContent={\"space-between\"}\r\n        alignItems={\"center\"}\r\n      >\r\n        <Text color={\"#000000\"} fontSize={\"1.25rem\"} fontWeight={\"600\"}>\r\n          User Details\r\n        </Text>\r\n        <Spacer />\r\n        <Box mt=\"2\" ml=\"3\">\r\n          <Button\r\n            size={\"xs\"}\r\n            borderRadius={\"full\"}\r\n            onClick={() => dispatch(getData(endpoint))}\r\n          >\r\n            <FiRefreshCcw />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Divider\r\n        bg=\"gray.300\" // Set the background color to dark gray\r\n        height=\"2px\" // Set the height of the divider\r\n      />\r\n      <Grid\r\n        h=\"200px\"\r\n        templateRows=\"repeat(2, 1fr)\"\r\n        templateColumns=\"repeat(5, 1fr)\"\r\n        gap={8}\r\n        p={8}\r\n      >\r\n        <GridItem rowSpan={2} colSpan={2} m={\"auto\"}>\r\n          <Image\r\n            borderRadius=\"full\"\r\n            boxSize=\"150px\"\r\n            src=\"https://bit.ly/dan-abramov\"\r\n            alt=\"Dan Abramov\"\r\n          />\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          <Flex flexDir={\"column\"}>\r\n            <Text color={\"gray.500\"}>Name</Text>\r\n            <Text fontSize={\"xl\"}>Tarun Nagar</Text>\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          <Flex flexDir={\"column\"}>\r\n            <Text color={\"gray.500\"}>UserName</Text>\r\n            <Text fontSize={\"xl\"}>tarunnagar8191</Text>\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          <Flex flexDir={\"column\"}>\r\n            <Text color={\"gray.500\"}>Phone Number</Text>\r\n            <Text fontSize={\"xl\"}>9899786756</Text>\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          <Flex flexDir={\"column\"}>\r\n            <Text color={\"gray.500\"}>Email Id</Text>\r\n            <Text fontSize={\"xl\"}>tarun91@gmail.com</Text>\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          <Flex flexDir={\"column\"}>\r\n            <Text color={\"gray.500\"}>City</Text>\r\n            <Text fontSize={\"xl\"}>Dwarka Mor</Text>\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          <Flex flexDir={\"column\"}>\r\n            <Text color={\"gray.500\"}>Branch</Text>\r\n            <Text fontSize={\"xl\"}>Delhi</Text>\r\n          </Flex>\r\n        </GridItem>\r\n      </Grid>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","// src/grid-item.tsx\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nvar GridItem = forwardRef(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGridItem.displayName = \"GridItem\";\n\nexport {\n  GridItem\n};\n","// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n"],"names":["dispatch","useDispatch","_jsxs","Stack","h","mt","children","Box","px","display","justifyContent","alignItems","_jsx","Text","color","fontSize","fontWeight","Spacer","ml","Button","size","borderRadius","onClick","getData","FiRefreshCcw","Divider","bg","height","Grid","templateRows","templateColumns","gap","p","GridItem","rowSpan","colSpan","m","Image","boxSize","src","alt","Flex","flexDir","spanFn","span","mapResponsive","value","concat","forwardRef","props","ref","area","colStart","colEnd","rowEnd","rowStart","rest","_objectWithoutProperties","_excluded","styles","compact","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","jsx","chakra","_objectSpread","__css","displayName","_useStyleConfig","useStyleConfig","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","_omitThemingProps","omitThemingProps","className","_omitThemingProps$ori","orientation","_excluded2","dividerStyles","vertical","horizontal","width","border","cx"],"sourceRoot":""}
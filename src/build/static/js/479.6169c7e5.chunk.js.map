{"version":3,"file":"static/js/479.6169c7e5.chunk.js","mappings":"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","sources":["pages/leads/components/CourseNamePopup.tsx","pages/leads/components/CoursePricePopup.tsx","pages/leads/components/StatusPopup.tsx","pages/leads/components/UpdateDatePopup.tsx","pages/leads/components/AttachmentPopup.tsx","pages/leads/LogPage.tsx"],"sourcesContent":["import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n  Select,\n  FormControl,\n  FormLabel,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData, updateData } from \"../../../redux/actions/common.action\";\nimport { useNavigate } from \"react-router-dom\";\ninterface Props {\n  course: string;\n  id: string;\n  getDataById: (enpoint: string, id: string) => void;\n}\n\ninterface CourseLists {\n    courses:{\n        CourseName:string;\n    }[]\n  loading: boolean;\n}\n\nconst CourseNamePopup: React.FC<Props> = ({ course,id,getDataById }) => {\n  const [selectedCourse,setSelectedCourse]=useState<string>(\"\")\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const dispatch:any=useDispatch()\n  const toast=useToast()\n  const endpointc:string='course'\n  const endpoint: string = \"lead\";\n  const navigate=useNavigate()\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const { loading,courses } = useSelector(\n    (state: { common: CourseLists }) => state.common\n  );\n  const onUpdatePrice = () => {\n    dispatch(updateData(id, endpoint, {EnquiryCourse:selectedCourse}, navigate, toast));\n   dispatch( getDataById(id,endpoint))\n    onClose();\n  };\n   \nuseEffect(()=>{\n    dispatch(getData(endpointc));\n},[])  \n\nuseEffect(()=>{\n  \n  setSelectedCourse(course);\n},[course])\n\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <Button\n          size=\"xs\"\n          fontWeight={\"medium\"}\n          mr=\"4\"\n          colorScheme=\"orange\"\n          variant=\"outline\"\n          color=\"orange.500\"\n          px=\"2\"\n        >\n          Update Course\n        </Button>\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {/* Update Price */}\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              <FormControl variant=\"floating\" id=\"SourceName\">\n                <Select\n                  value={selectedCourse}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    setSelectedCourse(e.target.value)\n                  }\n                >\n                  <option value={selectedCourse}>{selectedCourse}</option>{\" \"}\n                  {/* Set initial value */}\n                  {courses?.map((el, i) => (\n                    <option value={selectedCourse} key={i}>\n                      {el.CourseName}\n                    </option>\n                  ))}\n                </Select>\n                <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\n                  Course Name\n                </FormLabel>\n              </FormControl>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                ref={cancelRef}\n                onClick={onClose}\n                size=\"sm\"\n                fontWeight={\"medium\"}\n              >\n                Cancel\n              </Button>\n              <Button\n                fontWeight={\"medium\"}\n                size=\"sm\"\n                isLoading={loading}\n                loadingText=\"Please wait...\"\n                colorScheme=\"green\"\n                onClick={onUpdatePrice}\n                ml={3}\n              >\n                Update\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default CourseNamePopup;\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n  Select,\n  FormControl,\n  FormLabel,\n  useToast,\n  Input,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData, updateData } from \"../../../redux/actions/common.action\";\nimport { useNavigate } from \"react-router-dom\";\ninterface Props {\n  coursePrice: number;\n  id: string;\n  getDataById: (enpoint: string, id: string) => void;\n}\n\ninterface CourseLists {\n  \n  loading: boolean;\n}\n\nconst CoursePricePopup: React.FC<Props> = ({ coursePrice,id,getDataById }) => {\n  const [selectedPrice,setSelectedPrice]=useState<number>()\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const dispatch:any=useDispatch()\n  const toast=useToast()\n \n  const endpoint: string = \"lead\";\n  const navigate=useNavigate()\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const { loading} = useSelector(\n    (state: { common: CourseLists }) => state.common\n  );\n  const onUpdatePrice = () => {\n    dispatch(updateData(id, endpoint, {CoursePrice:selectedPrice}, navigate, toast)).then(()=>\n    dispatch( getDataById(id,endpoint))\n    )\n    onClose();\n  };\n   \n\n useEffect(() => {\n   setSelectedPrice(coursePrice); // Update selectedPrice when the coursePrice prop changes\n }, [coursePrice]);\n\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <Button\n          size=\"xs\"\n          fontWeight={\"medium\"}\n          mr=\"4\"\n          colorScheme=\"orange\"\n          variant=\"outline\"\n          color=\"orange.500\"\n          px=\"2\"\n        >\n          Update Price\n        </Button>\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {/* Update Price */}\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              <FormControl variant=\"floating\" id=\"SourceName\">\n                <Input\n                  type=\"number\"\n                  value={selectedPrice}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setSelectedPrice(+e.target.value)\n                  }\n                />\n\n                <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\n                  Course Price\n                </FormLabel>\n              </FormControl>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                ref={cancelRef}\n                onClick={onClose}\n                size=\"sm\"\n                fontWeight={\"medium\"}\n              >\n                Cancel\n              </Button>\n              <Button\n                fontWeight={\"medium\"}\n                size=\"sm\"\n                isLoading={loading}\n                loadingText=\"Please wait...\"\n                colorScheme=\"green\"\n                onClick={onUpdatePrice}\n                ml={3}\n              >\n                Update\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default CoursePricePopup;\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n  Select,\n  FormControl,\n  FormLabel,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getData, updateData } from \"../../../redux/actions/common.action\";\nimport { useNavigate } from \"react-router-dom\";\ninterface Props {\n  status: string;\n  id: string;\n  getDataById: (enpoint: string, id: string) => void;\n}\n\ninterface StatusLists {\n  statuses: {\n    StatusName: string;\n  }[];\n  loading: boolean;\n}\n\nconst StatusPopup: React.FC<Props> = ({ status, id, getDataById }) => {\n  const [selectedStatus, setSelectedStatus] = useState<string>(\"\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const dispatch: any = useDispatch();\n  const toast = useToast();\n  const endpointc: string = \"status\";\n  const endpoint: string = \"lead\";\n  const navigate = useNavigate();\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const { loading, statuses } = useSelector(\n    (state: { common: StatusLists }) => state.common\n  );\n  const onUpdatePrice = () => {\n    dispatch(\n      updateData(id, endpoint, { Status: selectedStatus }, navigate, toast)\n    ).then(()=>\n    dispatch(getDataById(id, endpoint))\n    )\n    onClose();\n  };\n\n  useEffect(() => {\n    dispatch(getData(endpointc));\n  }, []);\n\n  useEffect(() => {\n    setSelectedStatus(status);\n  }, [status]);\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <Button\n          size=\"xs\"\n          fontWeight={\"medium\"}\n          mr=\"4\"\n          colorScheme=\"orange\"\n          variant=\"outline\"\n          color=\"orange.500\"\n          px=\"2\"\n        >\n          Update Status\n        </Button>\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {/* Update Price */}\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              <FormControl variant=\"floating\" id=\"SourceName\">\n                <Select\n                  value={selectedStatus}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    setSelectedStatus(e.target.value)\n                  }\n                >\n                  <option value={selectedStatus}>{selectedStatus}</option>{\" \"}\n                  {/* Set initial value */}\n                  {statuses?.map((el, i) => (\n                    <option value={el.StatusName} key={i}>\n                      {el.StatusName}\n                    </option>\n                  ))}\n                </Select>\n                <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\n                  Status\n                </FormLabel>\n              </FormControl>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                ref={cancelRef}\n                onClick={onClose}\n                size=\"sm\"\n                fontWeight={\"medium\"}\n              >\n                Cancel\n              </Button>\n              <Button\n                fontWeight={\"medium\"}\n                size=\"sm\"\n                isLoading={loading}\n                loadingText=\"Please wait...\"\n                colorScheme=\"green\"\n                onClick={onUpdatePrice}\n                ml={3}\n              >\n                Update\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default StatusPopup;\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n  Select,\n  FormControl,\n  FormLabel,\n  useToast,\n  Input,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  updateData } from \"../../../redux/actions/common.action\";\nimport { useNavigate } from \"react-router-dom\";\ninterface Props {\n  date: string;\n  id: string;\n  getDataById: (enpoint: string, id: string) => void;\n}\n\ninterface UpdateDate {\n  loading: boolean;\n}\n\nconst UpdateDatePopup: React.FC<Props> = ({ date, id, getDataById }) => {\n  const [selectedDate, setSelectedDate] = useState<string>();\n  console.log(selectedDate,\"Date\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const dispatch: any = useDispatch();\n  const toast = useToast();\n\n  const endpoint: string = \"lead\";\n  const navigate = useNavigate();\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n  const { loading } = useSelector(\n    (state: { common: UpdateDate }) => state.common\n  );\n  const onUpdateDate = () => {\n    dispatch(\n      updateData(id, endpoint, { FollowupDate: selectedDate }, navigate, toast)\n    ).then(() => dispatch(getDataById(id, endpoint)));\n    onClose();\n  };\n useEffect(() => {\n//    const formattedDate = new Date(date).toLocaleDateString(\"en-GB\");\n   setSelectedDate(date); // Update selectedDate when the date prop changes\n }, [date]);\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <Button\n          size=\"xs\"\n          fontWeight={\"medium\"}\n          mr=\"4\"\n          colorScheme=\"orange\"\n          variant=\"outline\"\n          color=\"orange.500\"\n          px=\"2\"\n        >\n          Update Date\n        </Button>\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {/* Update Price */}\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              <FormControl variant=\"floating\" id=\"SourceName\">\n                <Input\n                  type=\"date\"\n                  value={\n                    selectedDate\n                      ? new Date(selectedDate).toISOString().substr(0, 10)\n                      : \"\"\n                  }\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setSelectedDate(e.target.value)\n                  }\n                />\n\n                <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\n                  Course Price\n                </FormLabel>\n              </FormControl>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                ref={cancelRef}\n                onClick={onClose}\n                size=\"sm\"\n                fontWeight={\"medium\"}\n              >\n                Cancel\n              </Button>\n              <Button\n                fontWeight={\"medium\"}\n                size=\"sm\"\n                isLoading={loading}\n                loadingText=\"Please wait...\"\n                colorScheme=\"green\"\n                onClick={onUpdateDate}\n                ml={3}\n              >\n                Update\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default UpdateDatePopup;\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  Button,\n  Box,\n  FormControl,\n  FormLabel,\n  Image,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\ninterface Props {\n  image: string;\n}\n\n\nconst AttachmentPopup: React.FC<Props> = ({ image }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const cancelRef = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <>\n      <Box onClick={onOpen}>\n        <Button\n          size=\"xs\"\n          fontWeight={\"medium\"}\n          mr=\"4\"\n          colorScheme=\"gray\"\n          background={\"none\"}\n          color=\"orange.500\"\n          px=\"2\"\n        >\n          Click Here\n        </Button>\n      </Box>\n\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay\n          bg=\"blackAlpha.300\"\n          backdropFilter=\"blur(5px) hue-rotate(90deg)\"\n        >\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {/* Update Price */}\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              <FormControl variant=\"floating\" id=\"SourceName\">\n                <Image src={image} alt=\"No-image\" />\n\n                <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\n                  Attachments\n                </FormLabel>\n              </FormControl>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button\n                ref={cancelRef}\n                onClick={onClose}\n                fontWeight={\"medium\"}\n                size=\"sm\"\n                colorScheme=\"red\"\n                ml={3}\n              >\n                Close\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\nexport default AttachmentPopup;\n","import { Box, Flex, RadioGroup,Radio, SimpleGrid, Stack, Table, TableContainer, Tbody, Td, Text, Th, Thead, Tr, Textarea, Button, Badge } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getDataById } from '../../redux/actions/common.action';\nimport { useParams } from 'react-router-dom';\nimport CourseNamePopup from './components/CourseNamePopup';\nimport CoursePricePopup from './components/CoursePricePopup';\nimport StatusPopup from './components/StatusPopup';\nimport UpdateDatePopup from './components/UpdateDatePopup';\nimport AttachmentPopup from './components/AttachmentPopup';\n\nconst LogPage:React.FC = () => {\n  const {lead,logs}=useSelector((state:any)=>state.common)\n  const [remarks,setRemarks]=useState<string>('');\n  const [logtype,setLogtype]=useState<string>('');\n  const {id}=useParams<string>()\nconst dispatch:any=useDispatch();\nconst endpoint:string='lead';\n\nuseEffect(()=>{\ndispatch(getDataById(id,endpoint))\n},[])\n\n  return (\n    <Stack h=\"100%\">\n      <SimpleGrid\n        columns={2}\n        gridTemplateColumns=\"30% 70%\"\n        border={\"1px solid #ccc\"}\n      >\n        <Box border=\"1px solid #ccc\" borderRadius={5} m={1}>\n          <TableContainer>\n            <Table size=\"sm\" variant=\"simple\">\n              <Thead>\n                <Tr w={15} p={1}>\n                  <Th fontWeight={\"700\"} w={15} p={1}>\n                    Client Details\n                  </Th>\n                  <Th w={15} p={1}></Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                <Tr w={15} p={1} borderLeft={\"4px\"} borderLeftColor={\"#FF0000\"}>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1} fontWeight={500}>\n                    Name\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.Name}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#8CB663\"}\n                  >\n                    Mobile\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.Phone1}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#0A9AE3\"}\n                  >\n                    Phone No.\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.Phone2}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#B235C6\"}\n                  >\n                    Email ID\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.Email}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#EFF230\"}\n                  >\n                    Address\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.Address}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#FF0000\"}\n                  >\n                    City\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.City}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#8CB663\"}\n                  >\n                    Course\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    <Box\n                      display={\"flex\"}\n                      justifyContent={\"space-between\"}\n                      alignItems={\"center\"}\n                      w=\"100%\"\n                    >\n                      {lead?.EnquiryCourse}{\" \"}\n                      <CourseNamePopup\n                        course={lead?.EnquiryCourse}\n                        id={lead._id}\n                        getDataById={getDataById}\n                      />\n                    </Box>\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#0A9AE3\"}\n                  >\n                    Price\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    <Box\n                      display={\"flex\"}\n                      justifyContent={\"space-between\"}\n                      alignItems={\"center\"}\n                    >\n                      {lead?.CoursePrice}{\" \"}\n                      <CoursePricePopup\n                        coursePrice={lead.CoursePrice}\n                        id={lead._id}\n                        getDataById={getDataById}\n                      />\n                    </Box>\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#B235C6\"}\n                  >\n                    Assign To\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.AssignTo}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#EFF230\"}\n                  >\n                    Status\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    <Box\n                      display={\"flex\"}\n                      justifyContent={\"space-between\"}\n                      alignItems={\"center\"}\n                    >\n                      <Badge variant=\"outline\" colorScheme=\"green\">\n                        {lead?.Status}\n                      </Badge>\n                      <StatusPopup\n                        status={lead?.Status}\n                        id={lead._id}\n                        getDataById={getDataById}\n                      />\n                    </Box>\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#FB0101\"}\n                  >\n                    Created By\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.CreatedBy}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#8CB663\"}\n                  >\n                    Enquiry Date\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {new Date(lead?.EnquiryDate).toLocaleString(\"en-US\", {\n                      year: \"numeric\",\n                      month: \"numeric\",\n                      day: \"numeric\",\n\n                      hour12: true,\n                    })}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#0A9AE3\"}\n                  >\n                    Follow Up\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"space-between\"\n                      alignItems=\"center\"\n                    >\n                      {lead?.FollowupDate && (\n                        <span>\n                          {new Date(lead.FollowupDate).toLocaleString(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"numeric\",\n                            day: \"numeric\",\n                            hour12: true,\n                          })}\n                        </span>\n                      )}\n                      <UpdateDatePopup\n                        date={lead?.FollowupDate}\n                        id={lead._id}\n                        getDataById={getDataById}\n                      />\n                    </Box>\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#B235C6\"}\n                  >\n                    Attachment\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    <AttachmentPopup image={lead?.Attachments} />\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#EFF230\"}\n                  >\n                    Source\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    {lead?.Source}\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#FB0101\"}\n                  >\n                    Promotion\n                  </Td>\n                  <Td w={15} fontSize={\"0.8rem\"} p={1}>\n                    millimetres (mm)\n                  </Td>\n                </Tr>\n                <Tr w={15} p={1}>\n                  <Td\n                    w={15}\n                    fontSize={\"0.8rem\"}\n                    p={1}\n                    fontWeight={500}\n                    borderLeft={\"4px\"}\n                    borderLeftColor={\"#8CB663\"}\n                  >\n                    Remarks\n                  </Td>\n                  {lead?.Remarks && lead.Remarks.length > 0 && (\n                    <Td\n                      w={15}\n                      fontSize={\"0.8rem\"}\n                      p={1}\n                      color=\"red.500\"\n                      fontWeight={600}\n                    >\n                      {lead.Remarks[lead.Remarks.length - 1]}\n                    </Td>\n                  )}\n                </Tr>\n              </Tbody>\n            </Table>\n          </TableContainer>\n        </Box>\n        <Box border=\"1px solid #ccc\" borderRadius={5} m={1}>\n          <TableContainer>\n            <Table\n              className=\"customTable\"\n              size=\"sm\"\n              //   variant=\"striped\"\n            >\n              <Thead>\n                <Tr w={15} p={1}>\n                  <Th fontWeight=\"700\" w={15} p={1}>\n                    Log History\n                  </Th>\n                  <Th w={15} p={1}></Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {logs?.map((remark: any, index: any) => (\n                  <Tr key={index} w={15} p={1}>\n                    <Td w={15} fontSize=\"0.8rem\" p={1}>\n                      <div>\n                        <span\n                          style={{\n                            fontWeight: \"500\",\n                            marginRight: \"5px\",\n                            color: \"black\",\n                          }}\n                        >\n                          Log Type:\n                        </span>\n                        {remark.LogType}\n                      </div>\n                      <div style={{ color: \"#078431\", fontSize: \"12px\" }}>\n                        <span\n                          style={{\n                            fontWeight: \"500\",\n                            marginRight: \"5px\",\n                            color: \"black\",\n                          }}\n                        >\n                          Remarks:\n                        </span>{\" \"}\n                        {remark.Remarks}\n                      </div>\n                    </Td>\n                    <Td w={15} fontSize=\"0.8rem\" p={1}>\n                      created by Neha Sharma on 24/03/2023 at 11:28 am.\n                    </Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </SimpleGrid>\n      <SimpleGrid\n        columns={2}\n        gridTemplateColumns=\"30% 70%\"\n        border={\"1px solid #ccc\"}\n      >\n        <Box borderRadius={5} m={2}>\n          <RadioGroup\n            defaultValue=\"OutBound\"\n            value={logtype}\n            onChange={(value) => setLogtype(value)}\n          >\n            <Stack spacing={10} direction=\"row\">\n              <Text fontWeight={700} fontSize={\"0.9rem\"}>\n                Log Type:\n              </Text>\n              <Radio\n                fontSize={\"0.8rem\"}\n                colorScheme=\"green\"\n                value=\"InBound\"\n                borderColor={\"gray.400\"}\n              >\n                <Text fontSize={\"0.8rem\"}>Inbound</Text>\n              </Radio>\n              <Radio\n                fontSize={\"0.8rem\"}\n                colorScheme=\"blackAlpha\"\n                value=\"OutBound\"\n                borderColor={\"gray.400\"}\n              >\n                <Text fontSize={\"0.8rem\"}>Outbound</Text>\n              </Radio>\n            </Stack>\n          </RadioGroup>\n          <Text fontWeight={\"700\"} fontSize={\"0.9rem\"} mt=\"2\">\n            Remarks\n          </Text>\n          <Textarea\n            value={remarks}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n              setRemarks(e.target.value)\n            }\n            borderColor={\"gray.400\"}\n            fontSize={\"0.8rem\"}\n          ></Textarea>\n          <Flex w=\"full\" justifyContent={\"flex-end\"} mt=\"2\">\n            <Button\n              size=\"xs\"\n              mr=\"2\"\n              colorScheme=\"teal\"\n              variant=\"outline\"\n              borderRadius=\"none\"\n            >\n              Back\n            </Button>\n            <Button size=\"xs\" colorScheme=\"green\" borderRadius=\"none\">\n              Add Log\n            </Button>\n          </Flex>\n        </Box>\n        <Box border=\"1px solid #ccc\" borderRadius={5} m={1}>\n          <TableContainer>\n            <Table size=\"sm\" className=\"customTable\">\n              <Thead>\n                <Tr w={15} p={2}>\n                  <Th fontWeight=\"700\" w={15} p={1}>\n                    Course History\n                  </Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                <Tr w={15} p={2}>\n                  <Td w={15} fontSize=\"0.8rem\" p={1}>\n                    previous course : business analytics\n                  </Td>\n                </Tr>\n                <Tr w={15} p={2}>\n                  <Td w={15} fontSize=\"0.8rem\" p={1}>\n                    previous course : business analytics\n                  </Td>\n                </Tr>\n                <Tr w={15} p={2}>\n                  <Td w={15} fontSize=\"0.8rem\" p={1}>\n                    previous course : business analytics\n                  </Td>\n                </Tr>\n                <Tr w={15} p={2}>\n                  <Td w={15} fontSize=\"0.8rem\" p={1}>\n                    previous course : business analytics\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </SimpleGrid>\n    </Stack>\n  );\n}\n\nexport default LogPage\n"],"names":["_ref","course","id","getDataById","_useState","useState","_useState2","_slicedToArray","selectedCourse","setSelectedCourse","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","dispatch","useDispatch","toast","useToast","endpoint","navigate","useNavigate","cancelRef","React","_useSelector","useSelector","state","common","loading","courses","useEffect","getData","_jsxs","_Fragment","children","_jsx","Box","onClick","Button","size","fontWeight","mr","colorScheme","variant","color","px","AlertDialog","leastDestructiveRef","AlertDialogOverlay","bg","backdropFilter","AlertDialogContent","AlertDialogHeader","fontSize","AlertDialogBody","FormControl","Select","value","onChange","e","target","map","el","i","CourseName","FormLabel","AlertDialogFooter","ref","isLoading","loadingText","updateData","EnquiryCourse","ml","coursePrice","selectedPrice","setSelectedPrice","Input","type","CoursePrice","then","status","selectedStatus","setSelectedStatus","statuses","StatusName","Status","date","selectedDate","setSelectedDate","console","log","Date","toISOString","substr","FollowupDate","image","background","Image","src","alt","lead","logs","remarks","setRemarks","_useState3","_useState4","logtype","setLogtype","useParams","Stack","h","SimpleGrid","columns","gridTemplateColumns","border","borderRadius","m","TableContainer","Table","Thead","Tr","w","p","Th","Tbody","borderLeft","borderLeftColor","Td","Name","Phone1","Phone2","Email","Address","City","display","justifyContent","alignItems","CourseNamePopup","_id","CoursePricePopup","AssignTo","Badge","StatusPopup","CreatedBy","EnquiryDate","toLocaleString","year","month","day","hour12","UpdateDatePopup","AttachmentPopup","Attachments","Source","Remarks","length","className","remark","index","style","marginRight","LogType","RadioGroup","defaultValue","spacing","direction","Text","Radio","borderColor","mt","Textarea","Flex"],"sourceRoot":""}
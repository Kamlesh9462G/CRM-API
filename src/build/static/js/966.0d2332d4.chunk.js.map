{"version":3,"file":"static/js/966.0d2332d4.chunk.js","mappings":"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","sources":["pages/course/UpdateCourse.tsx","../node_modules/@chakra-ui/select/dist/chunk-HQIEHZYI.mjs","../node_modules/@chakra-ui/select/dist/chunk-GJO77I2I.mjs"],"sourcesContent":["/*\n  UpdateCourse Component:\n  This component is used to update an existing course.\n  It displays a form with inputs for the course name and price.\n  It uses Chakra UI components for styling.\n\n  It does the following:\n  - Imports necessary dependencies and components\n  - Defines the interface for UpdateCourses\n  - Initializes the useSelector hook to access the state from Redux\n  - Initializes the useParams hook from react-router-dom to get the course ID from the URL\n  - Initializes the useDispatch function from Redux\n  - Initializes the useNavigate hook from react-router-dom for navigation purposes\n  - Initializes the useToast hook from Chakra UI for displaying toast messages\n  - Initializes the useForm hook from react-hook-form for form handling\n  - Fetches the course data and all courses on component mount\n  - Resets the form with the fetched course data\n  - Handles form submission and dispatches the updateData action\n  - Renders the form with course name and price inputs\n*/\n\nimport {\n  Box,\n  Button,\n  Input,\n  Select,\n  SimpleGrid,\n  Stack,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DevTool } from \"@hookform/devtools\";\nimport {\n  getData,\n  getDataById,\n  updateData,\n} from \"../../redux/actions/common.action\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\n// Interface for the course update data structure\ninterface UpdateCourses {\n  course: {\n    CourseValue: string;\n    CourseName: string;\n  };\n  courses: {\n    CourseName: string;\n    _id: string;\n  }[];\n  loading: boolean;\n}\n\nconst UpdateCourse = () => {\n  const { course, courses, loading } = useSelector(\n    (state: { common: UpdateCourses }) => state.common\n  );\n  const { id } = useParams();\n  const endpoint: string = \"course\";\n  const dispatch: any = useDispatch();\n  const navigate = useNavigate();\n  const toast = useToast();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n    control,\n  } = useForm();\n\n  useEffect(() => {\n    // Fetch the course data by ID and all courses\n    dispatch(getDataById(id, endpoint));\n    dispatch(getData(endpoint));\n  }, [dispatch, id, endpoint]);\n\n  useEffect(() => {\n    if (course) {\n      // Reset the form with the fetched course data\n      reset(course);\n    }\n  }, [course, reset]);\n\n  const onSubmit = (data: any) => {\n    // Handle form submission and dispatch the updateData action\n    dispatch(updateData(id, endpoint, data, navigate, toast)).then(() => {\n      dispatch(getData(\"course\"));\n    });\n  };\n\n  return (\n    <Stack h=\"100%\">\n      {/* Form */}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <SimpleGrid columns={3} px={10} py={1} gap={6}>\n          {/* Course Name Input */}\n          <Box>\n            <Text fontSize={\"1rem\"} ml=\"2\" mb=\"0.5\">\n              Course Name\n            </Text>\n            <Select\n              {...register(\"CourseName\", { required: true })}\n              size={\"sm\"}\n              borderColor={errors.CourseName ? \"red.500\" : \"gray.400\"}\n              borderRadius={\"0.25rem\"}\n            >\n              {courses?.map((course) => (\n                <option key={course._id} value={course.CourseName}>\n                  {course.CourseName}\n                </option>\n              ))}\n            </Select>\n            {errors.CourseName && (\n              <Text color=\"red.500\" fontSize=\"xs\">\n                Course name is required\n              </Text>\n            )}\n          </Box>\n\n          {/* Course Price Input */}\n          <Box>\n            <Text fontSize={\"1rem\"} ml=\"2\" mb=\"0.5\">\n              Course Price\n            </Text>\n            <Input\n              type=\"number\"\n              size={\"sm\"}\n              borderColor={errors?.CourseValue ? \"red.500\" : \"gray.400\"}\n              borderRadius={\"0.25rem\"}\n              placeholder=\"\"\n              {...register(\"CourseValue\", { required: true })}\n            />\n            {errors.CourseValue && (\n              <Text color=\"red.500\" fontSize=\"xs\">\n                Course price is required\n              </Text>\n            )}\n          </Box>\n\n          {/* Update Course Button */}\n          <Box\n            display={\"flex\"}\n            justifyContent={\"flex-start\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              isLoading={loading}\n              loadingText=\"Please wait...\"\n              type=\"submit\"\n              size={\"sm\"}\n              mt={6}\n              _hover={{ bg: \"#FF9000\" }}\n              w=\"8.188rem\"\n              bg=\"#FF9000\"\n              borderRadius={\"0.25rem\"}\n              color=\"whiteAlpha.900\"\n              fontWeight={\"700\"}\n              fontSize={\"1rem\"}\n            >\n              Update Course\n            </Button>\n          </Box>\n        </SimpleGrid>\n      </form>\n\n      {/* DevTool for form debugging */}\n      <DevTool control={control} />\n    </Stack>\n  );\n};\n\nexport default UpdateCourse;\n","// src/select-field.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SelectField = forwardRef(\n  function SelectField2(props, ref) {\n    const { children, placeholder, className, ...rest } = props;\n    return /* @__PURE__ */ jsxs(\n      chakra.select,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-select\", className),\n        children: [\n          placeholder && /* @__PURE__ */ jsx(\"option\", { value: \"\", children: placeholder }),\n          children\n        ]\n      }\n    );\n  }\n);\nSelectField.displayName = \"SelectField\";\n\nexport {\n  SelectField\n};\n","import {\n  SelectField\n} from \"./chunk-HQIEHZYI.mjs\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { dataAttr } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Select = forwardRef((props, ref) => {\n  var _a;\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...(_a = styles.field) == null ? void 0 : _a[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ jsxs(\n    chakra.div,\n    {\n      className: \"chakra-select__wrapper\",\n      __css: rootStyles,\n      ...layoutProps,\n      ...rootProps,\n      children: [\n        /* @__PURE__ */ jsx(\n          SelectField,\n          {\n            ref,\n            height: h != null ? h : height,\n            minH: minH != null ? minH : minHeight,\n            placeholder,\n            ...ownProps,\n            __css: fieldStyles,\n            children: props.children\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          SelectIcon,\n          {\n            \"data-disabled\": dataAttr(ownProps.disabled),\n            ...(iconColor || color) && { color: iconColor || color },\n            __css: styles.icon,\n            ...iconSize && { fontSize: iconSize },\n            children: icon\n          }\n        )\n      ]\n    }\n  );\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ jsx(\"svg\", { viewBox: \"0 0 24 24\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }\n) });\nvar IconWrapper = chakra(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ jsx(DefaultIcon, {}), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ jsx(IconWrapper, { ...rest, className: \"chakra-select__icon-wrapper\", children: isValidElement(children) ? clone : null });\n};\nSelectIcon.displayName = \"SelectIcon\";\n\nexport {\n  Select,\n  DefaultIcon\n};\n"],"names":["_useSelector","useSelector","state","common","course","courses","loading","id","useParams","endpoint","dispatch","useDispatch","navigate","useNavigate","toast","useToast","_useForm","useForm","register","handleSubmit","reset","errors","formState","control","useEffect","getDataById","getData","_jsxs","Stack","h","children","_jsx","onSubmit","data","updateData","then","SimpleGrid","columns","px","py","gap","Box","Text","fontSize","ml","mb","Select","_objectSpread","required","size","borderColor","CourseName","borderRadius","map","value","_id","color","Input","type","CourseValue","placeholder","display","justifyContent","alignItems","Button","isLoading","loadingText","mt","_hover","bg","w","fontWeight","DevTool","SelectField","forwardRef","props","ref","className","rest","_objectWithoutProperties","_excluded","jsxs","chakra","cx","jsx","displayName","_a","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","rootProps","icon","height","minH","minHeight","iconColor","iconSize","_split","object","keys","picked","omitted","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","key","includes","split","layoutPropNames","_split2","layoutProps","otherProps","ownProps","useFormControl","rootStyles","width","position","fieldStyles","paddingEnd","field","_focus","zIndex","__css","SelectIcon","dataAttr","disabled","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","pointerEvents","top","transform","_props$children","_excluded2","clone","cloneElement","role","focusable","style","isValidElement"],"sourceRoot":""}
{"version":3,"file":"static/js/609.19053fae.chunk.js","mappings":"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","sources":["components/Loader.tsx","pages/leads/AddNewLead.tsx"],"sourcesContent":["// Loader Component: Displays a loader spinner within a table row using react-loader-spinner and Chakra UI.\r\nimport { Box, Center, Spinner, Td, Tr } from \"@chakra-ui/react\";\r\nimport {\r\n  Skeleton,\r\n  SkeletonCircle,\r\n  SkeletonText,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\n// import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Tr height={400} maxHeight=\"400px\">\r\n      <Td colSpan={25}>\r\n        <Center h=\"100%\">\r\n          {/* <Spinner\r\n            speed=\"0.3s\"\r\n            thickness=\"3px\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"orange.300\"\r\n            size=\"xl\"\r\n          /> */}\r\n          {/* <Box>Heyyyyy</Box> */}\r\n          <Box>\r\n            <SkeletonText\r\n              mt=\"4\"\r\n              noOfLines={12}\r\n              spacing=\"4\"\r\n              skeletonHeight=\"4\"\r\n              width=\"84rem\"\r\n              borderRadius=\"2rem\"\r\n            />\r\n          </Box>\r\n        </Center>\r\n      </Td>\r\n    </Tr>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Select,\r\n  SimpleGrid,\r\n  Stack,\r\n  Table,\r\n  TableContainer,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getData, postData } from \"../../redux/actions/common.action\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { DevTool } from \"@hookform/devtools\";\r\nimport Loader from \"../../components/Loader\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../config/RequestMethod\";\r\nimport Cookies from \"js-cookie\";\r\n\r\ninterface LeadFormData {\r\n  owner: string;\r\n  Name: string;\r\n  EnquiryDate: string;\r\n  EnquiryCourse: string;\r\n  CoursePrice: string;\r\n  Phone1: number;\r\n  Phone2: number;\r\n  Email: string;\r\n  FollowupDate: string;\r\n  Status: string;\r\n  Branch: string;\r\n  City: string;\r\n  Source: string;\r\n  AssignTo: string;\r\n  location: string;\r\n\r\n  Remarks: string;\r\n  lfd: string;\r\n  days: string;\r\n}\r\n\r\ninterface imageData {\r\n  image: any;\r\n}\r\nconst initialImage = {\r\n  image: null,\r\n};\r\n\r\nconst initialState: LeadFormData = {\r\n  owner: \"\",\r\n  Name: \"\",\r\n  EnquiryDate: \"\",\r\n  EnquiryCourse: \"\",\r\n  CoursePrice: \"\",\r\n  Phone1: 0,\r\n  Phone2: 0,\r\n  Email: \"\",\r\n  FollowupDate: \"\",\r\n  Status: \"\",\r\n  Branch: \"\",\r\n  City: \"\",\r\n  Source: \"\",\r\n  AssignTo: \"\",\r\n  location: \"\",\r\n  Remarks: \"\",\r\n  lfd: \"hi\",\r\n  days: \"5\",\r\n};\r\n\r\ntype DataItem = {\r\n  email: any;\r\n  Phone1: any;\r\n};\r\n\r\nconst AddNewLead: React.FC = () => {\r\n  const [image, setImage] = useState<imageData>(initialImage);\r\n  const [duplicate, setDuplicate] = useState<DataItem[]>([]);\r\n  const {\r\n    branches,\r\n    users,\r\n    courses,\r\n    statuses,\r\n    cities,\r\n    sources,\r\n    signinuser,\r\n    loading,\r\n  } = useSelector((state: any) => state.common);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    setValue,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm<LeadFormData>();\r\n  const email = watch(\"Email\");\r\n  const Phone1 = watch(\"Phone1\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getData(\"branch\"));\r\n    dispatch(getData(\"course\"));\r\n    dispatch(getData(\"user\"));\r\n    dispatch(getData(\"status\"));\r\n    dispatch(getData(\"city\"));\r\n    dispatch(getData(\"source\"));\r\n  }, []);\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    let debounce: NodeJS.Timeout;\r\n\r\n    const fetchData = async () => {\r\n      clearTimeout(debounce); // Clear the previous timeout\r\n\r\n      debounce = setTimeout(async () => {\r\n        const token = Cookies.get(\"token\"); // Get the token from the cookie\r\n\r\n        try {\r\n          setLoading(true);\r\n\r\n          const phoneString = String(Phone1); // Convert to string\r\n\r\n          if (phoneString.length >= 6) {\r\n            // Make the API request for Phone1\r\n            const resPhone1 = await axios.get(\r\n              `${BASE_URL}/lead/search-duplicate-lead?keyword=${phoneString}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`, // Pass the token in the headers\r\n                },\r\n              }\r\n            );\r\n            const dataPhone1 = resPhone1.data.Data;\r\n\r\n            setDuplicate(dataPhone1);\r\n          } else if (email.includes(\"@\")) {\r\n            // Make the API request for email\r\n            const resEmail = await axios.get(\r\n              `${BASE_URL}/lead/search-duplicate-lead?keyword=${email}`,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`, // Pass the token in the headers\r\n                },\r\n              }\r\n            );\r\n            const dataEmail = resEmail.data.Data;\r\n\r\n            setDuplicate(dataEmail);\r\n          } else {\r\n            setDuplicate([]); // No valid query, clear the duplicate data\r\n          }\r\n\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(error);\r\n          setLoading(false);\r\n        }\r\n      }, 500);\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => clearTimeout(debounce);\r\n  }, [Phone1, email]);\r\n\r\n  const dispatch: any = useDispatch();\r\n  const endpoint: string = \"lead\";\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"EnquiryCourse\") {\r\n      const selectedCourse = courses.find(\r\n        (course: any) => course.CourseName === value\r\n      );\r\n\r\n      const CoursePrice = selectedCourse ? selectedCourse.CourseValue : \"\";\r\n      setValue(\"CoursePrice\", CoursePrice); // Use the name \"CourseValue\" to set the value\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    setImage({\r\n      ...image,\r\n      image: file || null, // store selected file in formData`\r\n    });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const onSubmit = (formData: LeadFormData) => {\r\n    const formDataToSend = new FormData();\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n      formDataToSend.append(key, value);\r\n    });\r\n    formDataToSend.append(\"file\", image.image);\r\n\r\n    dispatch(postData(formData, endpoint, navigate, toast)).then(() => {\r\n      //  dispatch(getData(\"branch\"));\r\n      // Navigate(\"/branch-list\");\r\n      setValue(\"Name\", initialState.Name);\r\n      setValue(\"EnquiryDate\", initialState.EnquiryDate);\r\n      setValue(\"EnquiryCourse\", initialState.EnquiryCourse);\r\n      setValue(\"CoursePrice\", initialState.CoursePrice);\r\n      setValue(\"Phone1\", initialState.Phone1);\r\n      // setValue(\"Phone2\", initialState.Phone2);\r\n      setValue(\"Email\", initialState.Email);\r\n      setValue(\"FollowupDate\", initialState.FollowupDate);\r\n      setValue(\"Status\", initialState.Status);\r\n      setValue(\"Branch\", initialState.Branch);\r\n      setValue(\"City\", initialState.City);\r\n      setValue(\"Source\", initialState.Source);\r\n      setValue(\"AssignTo\", initialState.AssignTo);\r\n      setValue(\"location\", initialState.location);\r\n      setValue(\"Remarks\", initialState.Remarks);\r\n\r\n      console.log(\"ok\");\r\n    });\r\n  };\r\n\r\n  const branchoptions = branches?.map((branch: any) => (\r\n    <option key={branch._id} value={branch.BranchName}>\r\n      {branch.BranchName}\r\n    </option>\r\n  ));\r\n  const courseoptions = courses?.map((course: any) => (\r\n    <option key={course._id} value={course.CourseName}>\r\n      {course.CourseName}\r\n    </option>\r\n  ));\r\n\r\n  const useroptions = users?.map((user: any) => (\r\n    <option key={user._id} value={user.Name}>\r\n      {user.Name}\r\n    </option>\r\n  ));\r\n  const statusoptions = statuses?.map((el: any) => (\r\n    <option key={el._id} value={el.Status}>\r\n      {el.StatusName}\r\n    </option>\r\n  ));\r\n  const cityoptions = cities?.map((el: any) => (\r\n    <option key={el._id} value={el.CityName}>\r\n      {el.CityName}\r\n    </option>\r\n  ));\r\n  const sourceoptions = sources?.map((el: any) => (\r\n    <option key={el._id} value={el.SourceName}>\r\n      {el.SourceName}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <Stack h=\"100%\">\r\n      {/* inputs starts */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <SimpleGrid\r\n          columns={[1, 1, 2, 3]} // Set the number of columns for different screen sizes\r\n          autoFlow=\"row\" // Set the flow of the grid items to row\r\n          gap={5}\r\n          px={[2, 5]} // Set the horizontal padding for different screen sizes\r\n          py={[2, 5]} // Set the vertical padding for different screen sizes\r\n          minWidth=\"250px\"\r\n        >\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"owner\">\r\n              <Input\r\n                disabled\r\n                autoComplete=\"off\"\r\n                {...register(\"owner\")}\r\n                borderColor={\"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n                value={signinuser.Name}\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Owner\r\n              </FormLabel>\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"name\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"Name\", {\r\n                  required: \"name is required\",\r\n                })}\r\n                borderColor={errors?.Name ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Name\r\n              </FormLabel>\r\n              {errors.Name && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  name is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"EnquiryDate\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"EnquiryDate\", {\r\n                  required: \"EnquiryDate is required\",\r\n                })}\r\n                borderColor={errors?.EnquiryDate ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                type=\"datetime-local\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enquiry Date\r\n              </FormLabel>\r\n              {errors.EnquiryDate && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  EnquiryDate is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"EnquiryCourse\">\r\n              <Select\r\n                autoComplete=\"off\"\r\n                {...register(\"EnquiryCourse\")}\r\n                onChange={handleChange}\r\n                size=\"sm\"\r\n                borderColor={errors?.EnquiryCourse ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\"\"\r\n              >\r\n                <option value=\"\" selected disabled>\r\n                  Select Course\r\n                </option>\r\n                {courseoptions}\r\n              </Select>\r\n\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enquiry Course\r\n              </FormLabel>\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"CoursePrice\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"CoursePrice\")}\r\n                onChange={handleChange}\r\n                borderColor={\"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Course Price\r\n              </FormLabel>\r\n              {errors.CoursePrice && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  CoursePrice is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Phone1\">\r\n              <Input\r\n                maxLength={10}\r\n                {...register(\"Phone1\", {\r\n                  required: \"Phone1  is required\",\r\n                })}\r\n                autoComplete=\"off\"\r\n                borderColor={errors?.Phone1 ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n                type=\"number\"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Phone No. 1\r\n              </FormLabel>\r\n              {errors.Phone1 && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  mobile number is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Phone2\">\r\n              <Input\r\n                maxLength={10}\r\n                {...register(\"Phone2\", {\r\n                  required: \"Phone 2 is required\",\r\n                })}\r\n                borderColor={errors?.Phone2 ? \"red.500\" : \"gray.400\"}\r\n                autoComplete=\"off\"\r\n                type=\"number\"\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Phone No. 2\r\n              </FormLabel>\r\n              {errors.Phone2 && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  mobile number 2 is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Email\">\r\n              <Input\r\n                {...register(\"Email\", {\r\n                  required: \"Email is required\",\r\n                })}\r\n                borderColor={errors?.Email ? \"red.500\" : \"gray.400\"}\r\n                name=\"Email\"\r\n                autoComplete=\"off\"\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Email ID *\r\n              </FormLabel>\r\n              {errors.Email && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Email ID is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"FollowupDate\">\r\n              <Input\r\n                {...register(\"FollowupDate\", {\r\n                  required: \"FollowupDate date is required\",\r\n                })}\r\n                borderColor={errors?.FollowupDate ? \"red.500\" : \"gray.400\"}\r\n                autoComplete=\"off\"\r\n                size=\"sm\"\r\n                type=\"datetime-local\"\r\n                borderRadius={\"0.25rem\"}\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Follow Up Date\r\n              </FormLabel>\r\n              {errors.FollowupDate && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  FollowupDate date is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Status\">\r\n              <Select\r\n                {...register(\"Status\", {\r\n                  required: \"Status is required\",\r\n                })}\r\n                autoComplete=\"off\"\r\n                borderColor={errors?.FollowupDate ? \"red.500\" : \"gray.400\"}\r\n                size=\"sm\"\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\"\"\r\n              >\r\n                {\" \"}\r\n                <option value=\"\" disabled selected>\r\n                  Select Status\r\n                </option>\r\n                {statusoptions}\r\n              </Select>\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Status\r\n              </FormLabel>\r\n              {errors.Status && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Status is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Branch\">\r\n              <Select\r\n                autoComplete=\"off\"\r\n                {...register(\"Branch\", {\r\n                  required: \"Branch is required\",\r\n                })}\r\n                size=\"sm\"\r\n                borderColor={errors?.Branch ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\"\"\r\n              >\r\n                {\" \"}\r\n                <option value=\"\" disabled selected>\r\n                  Select Branch\r\n                </option>\r\n                {branchoptions}\r\n              </Select>\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Branch\r\n              </FormLabel>\r\n              {errors.Branch && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Branch is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"City\">\r\n              <Select\r\n                autoComplete=\"off\"\r\n                {...register(\"City\", {\r\n                  required: \"City is required\",\r\n                })}\r\n                size=\"sm\"\r\n                borderColor={errors?.City ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\"\"\r\n              >\r\n                {\" \"}\r\n                <option value=\"\" disabled selected>\r\n                  Select City\r\n                </option>\r\n                {cityoptions}\r\n              </Select>\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                City\r\n              </FormLabel>\r\n              {errors.City && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  City is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Source\">\r\n              <Select\r\n                autoComplete=\"off\"\r\n                {...register(\"Source\", {\r\n                  required: \"Source is required\",\r\n                })}\r\n                size=\"sm\"\r\n                borderColor={errors?.Source ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\"\"\r\n              >\r\n                {\" \"}\r\n                <option value=\"\" disabled selected>\r\n                  Select Source\r\n                </option>\r\n                {sourceoptions}\r\n              </Select>\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Source\r\n              </FormLabel>\r\n              {errors.Source && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Source is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"AssignTo\">\r\n              <Select\r\n                autoComplete=\"off\"\r\n                {...register(\"AssignTo\", {\r\n                  required: \"AssignTo is required\",\r\n                })}\r\n                size=\"sm\"\r\n                borderColor={errors?.AssignTo ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\"\"\r\n              >\r\n                {\" \"}\r\n                <option value=\"\" disabled selected>\r\n                  Select Assigned To\r\n                </option>\r\n                {useroptions}\r\n              </Select>\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Assigned To\r\n              </FormLabel>\r\n              {errors.AssignTo && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Assigned To is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"location\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"location\", {\r\n                  required: \"location is required\",\r\n                })}\r\n                size=\"sm\"\r\n                borderColor={errors?.location ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Location\r\n              </FormLabel>\r\n              {errors.location && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  location is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <Input\r\n              autoComplete=\"off\"\r\n              onChange={handleImageChange}\r\n              size=\"sm\"\r\n              type=\"file\"\r\n              name=\"image\"\r\n              borderColor={\"gray.400\"}\r\n              borderRadius=\"0.25rem\"\r\n              placeholder=\"Enter User Profile\"\r\n              sx={{\r\n                \"::file-selector-button\": {\r\n                  bg: \"gray.500\",\r\n                  color: \"white\",\r\n                  ml: -5,\r\n                  mt: 0.4,\r\n                  py: 1.4,\r\n                  px: 12,\r\n                  mr: 15,\r\n\r\n                  borderRadius: \"0.25rem\",\r\n                  _hover: {\r\n                    bg: \"blue.600\",\r\n                  },\r\n                },\r\n              }}\r\n              flexGrow={1}\r\n              // onChange={handleFileChange}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Remarks\">\r\n              <textarea\r\n                {...register(\"Remarks\", {\r\n                  required: \"Remarks is required\",\r\n                })}\r\n                autoComplete=\"off\"\r\n                // onChange={handleChange}\r\n                // size=\"xs\"\r\n                // borderColor={\"gray.400\"}\r\n                // borderRadius={\"0.25rem\"}\r\n                placeholder=\" \"\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"white\",\r\n                  color: \"black\",\r\n                  fontFamily: \"sans-serif\",\r\n                  fontSize: \"15px\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"2px\",\r\n                  border: \"1px solid #a0aec0\",\r\n                  height: \"32px\",\r\n                  minHeight: \"32px\",\r\n\r\n                  borderColor: errors?.location ? \"red\" : \"#a0aec0\",\r\n                }}\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Remarks\r\n              </FormLabel>\r\n              {errors.Remarks && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Remarks is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            justifyContent={\"flex-end\"}\r\n            alignItems={\"center\"}\r\n          >\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText=\"Please wait...\"\r\n              type=\"submit\"\r\n              size={\"sm\"}\r\n              _hover={{ bg: \"#FF9000\" }}\r\n              w=\"8.188rem\"\r\n              bg=\"#FF9000\"\r\n              borderRadius={\"0.25rem\"}\r\n              color=\"whiteAlpha.900\"\r\n              fontWeight={\"700\"}\r\n              fontSize={\"1rem\"}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Box>{\" \"}\r\n        </SimpleGrid>\r\n        {/* inputs end */}\r\n      </form>\r\n      <SimpleGrid>\r\n        <TableContainer className=\"tarun\" whiteSpace={\"nowrap\"}>\r\n          <Box overflowY=\"auto\" height={200} maxHeight=\"200px\">\r\n            <Table variant=\"striped\" colorScheme=\"gray\" size=\"sm\">\r\n              <Thead\r\n                bg={\"blue.600\"}\r\n                color={\"whiteAlpha.900\"}\r\n                position={\"sticky\"}\r\n                borderRadius={\"20px\"}\r\n                top=\"0\"\r\n              >\r\n                <Tr>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    #\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Ass To\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Source\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    City\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Name\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Mob 1\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Mob 2\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Name\r\n                  </Th>\r\n\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Email\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Course\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Price\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    Days\r\n                  </Th>\r\n                  <Th\r\n                    p=\"2\"\r\n                    w=\"15\"\r\n                    fontSize={\"0.65rem\"}\r\n                    color={\"whiteAlpha.900\"}\r\n                  >\r\n                    FollowUp\r\n                  </Th>\r\n                </Tr>\r\n              </Thead>\r\n              {isLoading ? (\r\n                <Loader />\r\n              ) : (\r\n                <Tbody>\r\n                  {duplicate?.length === 0 ? (\r\n                    <Tr>\r\n                      <Td colSpan={14} textAlign=\"center\" fontWeight={700}></Td>\r\n                    </Tr>\r\n                  ) : (\r\n                    duplicate?.map((el: any) => (\r\n                      <Tr key={el._id} fontSize={\"0.5rem\"}>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.UID}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.AssignTo}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.Source}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.City}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.Name}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.Phone1}\r\n                        </Td>\r\n                        <Td\r\n                          fontSize={\"0.8rem\"}\r\n                          textAlign={\"center\"}\r\n                          p=\"2\"\r\n                          w=\"15\"\r\n                        >\r\n                          {el.Phone2}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.Name}\r\n                        </Td>\r\n\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.Email}\r\n                        </Td>\r\n                        <Td\r\n                          fontSize={\"0.8rem\"}\r\n                          p=\"2\"\r\n                          w=\"15\"\r\n                          textOverflow={\"ellipsis\"}\r\n                          overflow={\"hidden\"}\r\n                          whiteSpace={\"nowrap\"}\r\n                        >\r\n                          {/* {el.Course.length > 10 ? `${el.Course.slice(0, 10)}...` : el.Course} */}\r\n                          {el.Course}\r\n                        </Td>\r\n\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {\" \"}\r\n                          {el.CoursePrice}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {el.Days2}\r\n                        </Td>\r\n                        <Td fontSize={\"0.8rem\"} p=\"2\" w=\"15\">\r\n                          {new Date(el.FollowupDate).toLocaleDateString()}\r\n                        </Td>\r\n                        <Td\r\n                          textAlign={\"center\"}\r\n                          fontSize={\"0.8rem\"}\r\n                          p=\"2\"\r\n                          w=\"15\"\r\n                        >\r\n                          {\" \"}\r\n                        </Td>\r\n                      </Tr>\r\n                    ))\r\n                  )}\r\n                </Tbody>\r\n              )}\r\n            </Table>\r\n          </Box>\r\n        </TableContainer>\r\n      </SimpleGrid>\r\n      <DevTool control={control} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default AddNewLead;\r\n"],"names":["_jsx","Tr","height","maxHeight","children","Td","colSpan","Center","h","Box","SkeletonText","mt","noOfLines","spacing","skeletonHeight","width","borderRadius","initialImage","image","initialState","_useState","useState","_useState2","_slicedToArray","setImage","_useState3","_useState4","duplicate","setDuplicate","_useSelector","useSelector","state","common","branches","users","courses","statuses","cities","sources","signinuser","loading","_useForm","useForm","register","handleSubmit","control","setValue","errors","formState","watch","email","Phone1","useEffect","dispatch","getData","_useState5","_useState6","isLoading","setLoading","debounce","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","clearTimeout","setTimeout","_callee","token","phoneString","resPhone1","dataPhone1","resEmail","dataEmail","_context","Cookies","String","length","axios","concat","BASE_URL","headers","Authorization","sent","data","Data","includes","t0","console","error","stop","apply","arguments","useDispatch","handleChange","e","_e$target","target","name","value","selectedCourse","find","course","CourseName","CoursePrice","CourseValue","navigate","useNavigate","toast","useToast","branchoptions","map","branch","BranchName","_id","courseoptions","useroptions","user","Name","statusoptions","el","Status","StatusName","cityoptions","CityName","sourceoptions","SourceName","_jsxs","Stack","onSubmit","formData","formDataToSend","FormData","Object","entries","forEach","_ref3","_ref4","key","append","postData","then","log","SimpleGrid","columns","autoFlow","gap","px","py","minWidth","FormControl","variant","id","Input","_objectSpread","disabled","autoComplete","borderColor","size","placeholder","FormLabel","fontWeight","color","required","Text","fontSize","EnquiryDate","type","Select","onChange","EnquiryCourse","selected","maxLength","Phone2","Email","FollowupDate","Branch","City","Source","AssignTo","location","_e$target$files","file","files","sx","bg","ml","mr","_hover","flexGrow","style","backgroundColor","fontFamily","padding","border","minHeight","Remarks","display","justifyContent","alignItems","Button","loadingText","w","TableContainer","className","whiteSpace","overflowY","Table","colorScheme","Thead","position","top","Th","p","Loader","Tbody","textAlign","UID","textOverflow","overflow","Course","Days2","Date","toLocaleDateString","DevTool"],"sourceRoot":""}
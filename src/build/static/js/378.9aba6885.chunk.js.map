{"version":3,"file":"static/js/378.9aba6885.chunk.js","mappings":"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","sources":["pages/user/AddAdmin.tsx"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  SimpleGrid,\r\n  Stack,\r\n  Text,\r\n  Checkbox,\r\n  HStack,\r\n  Grid,\r\n  GridItem,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDataSuperAdmin, postData } from \"../../redux/actions/common.action\";\r\n// import makeAnimated from \"react-select/animated\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { DevTool } from \"@hookform/devtools\";\r\n\r\ninterface AddAdmins {\r\n  Name: string;\r\n  Email: string;\r\n  Phone: number;\r\n  UserName: string;\r\n  Address: string;\r\n  teamSize: number;\r\n  UserType: number;\r\n  companyName: string;\r\n  webURL: string;\r\n  validupTo: number;\r\n  numberOfUsers: number;\r\n  menuPermissions: string[];\r\n\r\n  // image: any;\r\n  selectedUsers: string[];\r\n}\r\n\r\ninterface imageData {\r\n  file: any;\r\n}\r\n\r\nconst initialImage = {\r\n  file: null,\r\n};\r\n\r\nconst AddAdmin: React.FC = () => {\r\n  const [image, setImage] = useState<imageData>(initialImage);\r\n  const [selectedPermissions, setSelectedPermissions] = useState<string[]>([]);\r\n  // const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm<AddAdmins>();\r\n\r\n  const endpoint: string = \"auth/signup\";\r\n  const dispatch: any = useDispatch();\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    setImage({\r\n      ...image,\r\n      file: file || null,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    value: string\r\n  ) => {\r\n    if (e.target.checked) {\r\n      setSelectedPermissions((prevPermissions) => [...prevPermissions, value]);\r\n    } else {\r\n      setSelectedPermissions((prevPermissions) =>\r\n        prevPermissions.filter((permission) => permission !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData: AddAdmins) => {\r\n    const requestData = {\r\n      ...formData,\r\n      UserType: 2,\r\n      file: image.file,\r\n      menuPermissions: selectedPermissions,\r\n    };\r\n\r\n    dispatch(postData(requestData, endpoint, navigate, toast)).then(() => {\r\n      dispatch(getDataSuperAdmin(\"admins\"));\r\n      navigate(\"/admin-list\");\r\n      console.log(\"ok\");\r\n    });\r\n  };\r\n\r\n  // const animatedComponents = makeAnimated();\r\n\r\n  return (\r\n    <Stack h=\"100%\">\r\n      {/* inputs starts */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <SimpleGrid\r\n          columns={[1, 1, 2, 3]} // Set the number of columns for different screen sizes\r\n          autoFlow=\"row\" // Set the flow of the grid items to row\r\n          gap={7}\r\n          px={[2, 5]} // Set the horizontal padding for different screen sizes\r\n          py={[2, 5]} // Set the vertical padding for different screen sizes\r\n          minWidth=\"250px\"\r\n        >\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Name\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"Name\", {\r\n                  required: \"name is required\",\r\n                })}\r\n                borderColor={errors?.Name ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n                className=\"autocomplete-input\"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Name\r\n              </FormLabel>\r\n              {errors.Name && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  {errors.Name?.message}\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Email\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"Email\", {\r\n                  required: \"email ID is required\",\r\n                })}\r\n                borderColor={errors?.Email ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Email ID\r\n              </FormLabel>\r\n              {errors.Email && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  email ID is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Phone\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"Phone\", {\r\n                  required: \"mobile no is required\",\r\n                })}\r\n                borderColor={errors?.Phone ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n                type=\"number\"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Phone No.\r\n              </FormLabel>\r\n              {errors.Phone && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  mobile no is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"UserName\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"UserName\", {\r\n                  required: \"UserName is required\",\r\n                })}\r\n                borderColor={errors?.UserName ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Unique Username\r\n              </FormLabel>\r\n              {errors.UserName && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  username is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"Address\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"Address\", {\r\n                  required: \"Address is required\",\r\n                })}\r\n                borderColor={errors?.Address ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Address\r\n              </FormLabel>\r\n              {errors.Address && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  Address is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"teamSize\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"teamSize\", {\r\n                  required: \"teamSize is required\",\r\n                })}\r\n                borderColor={errors?.teamSize ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n                type=\"number\"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Team Size\r\n              </FormLabel>\r\n              {errors.teamSize && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  team size is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"companyName\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"companyName\", {\r\n                  required: \"companyName is required\",\r\n                })}\r\n                borderColor={errors?.companyName ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter Company Name\r\n              </FormLabel>\r\n              {errors.companyName && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  companyName is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"webURL\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"webURL\", {\r\n                  required: \"webURL is required\",\r\n                })}\r\n                borderColor={errors?.webURL ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                placeholder=\" \"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Enter webURL\r\n              </FormLabel>\r\n              {errors.webURL && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  webURL is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"validupTo\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"validupTo\", {\r\n                  required: \"validupTo is required\",\r\n                })}\r\n                borderColor={errors?.validupTo ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                type=\"date\"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Valid Up to\r\n              </FormLabel>\r\n              {errors.validupTo && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  validupTo is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n          <Box>\r\n            <FormControl variant=\"floating\" id=\"numberOfUsers\">\r\n              <Input\r\n                autoComplete=\"off\"\r\n                {...register(\"numberOfUsers\", {\r\n                  required: \"numberOfUsers is required\",\r\n                })}\r\n                borderColor={errors?.numberOfUsers ? \"red.500\" : \"gray.400\"}\r\n                borderRadius={\"0.25rem\"}\r\n                size=\"sm\"\r\n                type=\"number\"\r\n              />\r\n              <FormLabel fontWeight={\"400\"} color={\"gray.600\"}>\r\n                Number of user can create\r\n              </FormLabel>\r\n              {errors.numberOfUsers && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  number of user create is required\r\n                </Text>\r\n              )}\r\n            </FormControl>\r\n          </Box>\r\n        </SimpleGrid>\r\n        <Grid\r\n          templateColumns=\"repeat(3, 1fr)\"\r\n          gap={4}\r\n          autoFlow=\"row\" // Set the flow of the grid items to row\r\n          px={[2, 5]} // Set the horizontal padding for different screen sizes\r\n          minWidth=\"250px\"\r\n        >\r\n          <GridItem colSpan={1}>\r\n            <Box>\r\n              <Text fontSize={\"0.9rem\"} ml=\"2\" mb=\"0.5\">\r\n                Company Image\r\n              </Text>\r\n              <Input\r\n                // {...register(\"image\", {\r\n                //   required: \"image is required\",\r\n                // })}\r\n                borderColor={\"gray.400\"}\r\n                size=\"sm\"\r\n                type=\"file\"\r\n                borderRadius=\"0.25rem\"\r\n                sx={{\r\n                  \"::file-selector-button\": {\r\n                    bg: \"gray.500\",\r\n                    color: \"white\",\r\n                    ml: -6,\r\n                    mt: 0.7,\r\n                    py: 1.45,\r\n                    px: 12,\r\n                    mr: 15,\r\n                    borderRadius: \"0.25rem\",\r\n                    _hover: {\r\n                      bg: \"blue.600\",\r\n                    },\r\n                  },\r\n                }}\r\n                flexGrow={1}\r\n                onChange={handleImageChange}\r\n              />\r\n              {/* {errors.image && (\r\n                <Text color=\"red.500\" fontSize=\"xs\">\r\n                  image is required\r\n                </Text>\r\n              )} */}\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem colSpan={2}>\r\n            <Box className=\"inputSection\">\r\n              <Text className=\"inputLabel\">Permissions</Text>\r\n              <HStack\r\n                spacing={2}\r\n                align=\"stretch\"\r\n                className=\"mb-2 items-center w-full text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg sm:flex dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                wrap={\"wrap\"}\r\n              >\r\n                {menuPermissions?.map((data, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    className=\"w-full border-b border-gray-200 sm:border-b-0 sm:border-r dark:border-gray-600\"\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    pl={3}\r\n                  >\r\n                    <Checkbox\r\n                      id=\"vue-checkbox-list\"\r\n                      value={data?.value}\r\n                      size=\"sm\"\r\n                      colorScheme=\"blue\"\r\n                      bg=\"gray.100\"\r\n                      border=\"gray.300\"\r\n                      borderRadius=\"md\"\r\n                      checked={selectedPermissions.includes(data?.value)} // Add this line\r\n                      onChange={(e) => handleCheckboxChange(e, data?.value)} // Add this line\r\n                    />\r\n\r\n                    <Text\r\n                      py={3}\r\n                      ml={2}\r\n                      fontSize=\"sm\"\r\n                      fontWeight=\"medium\"\r\n                      color=\"gray.900\"\r\n                      _dark={{ color: \"gray.300\" }}\r\n                    >\r\n                      {data?.title}\r\n                    </Text>\r\n                  </Box>\r\n                ))}\r\n              </HStack>\r\n            </Box>\r\n          </GridItem>\r\n        </Grid>\r\n        <Box\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          alignItems={\"center\"}\r\n          mx={4}\r\n        >\r\n          <Button\r\n            type=\"submit\"\r\n            mt={6}\r\n            size={\"sm\"}\r\n            _hover={{ bg: \"#FF9000\" }}\r\n            w=\"8.188rem\"\r\n            bg=\"#FF9000\"\r\n            borderRadius={\"0.25rem\"}\r\n            color=\"whiteAlpha.900\"\r\n            fontWeight={\"700\"}\r\n            fontSize={\"1rem\"}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n      {/* inputs end */}\r\n      <DevTool control={control} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default AddAdmin;\r\n\r\nconst menuPermissions = [\r\n  { value: \"Dashboard\", title: \"Dashboard\" },\r\n  { value: \"Lead List\", title: \"Lead List\" },\r\n  { value: \"Team List\", title: \"Team List\" },\r\n  { value: \"Source List\", title: \"Source List\" },\r\n  { value: \"Course List\", title: \"Course List\" },\r\n  { value: \"Status List\", title: \"Status List\" },\r\n  { value: \" Branch List\", title: \"Branch List\" },\r\n  { value: \"City List\", title: \" City List\" },\r\n  { value: \"Call History\", title: \"Call History\" },\r\n  { value: \"Call History\", title: \"Call History\" },\r\n];\r\n"],"names":["initialImage","file","_errors$Name","_useState","useState","_useState2","_slicedToArray","image","setImage","_useState3","_useState4","selectedPermissions","setSelectedPermissions","_useForm","useForm","register","handleSubmit","control","errors","formState","dispatch","useDispatch","navigate","useNavigate","toast","useToast","_jsxs","Stack","h","children","onSubmit","formData","requestData","_objectSpread","UserType","menuPermissions","postData","then","getDataSuperAdmin","console","log","SimpleGrid","columns","autoFlow","gap","px","py","minWidth","_jsx","Box","FormControl","variant","id","Input","autoComplete","required","borderColor","Name","borderRadius","size","placeholder","className","FormLabel","fontWeight","color","Text","fontSize","message","Email","Phone","type","UserName","Address","teamSize","companyName","webURL","validupTo","numberOfUsers","Grid","templateColumns","GridItem","colSpan","ml","mb","sx","bg","mt","mr","_hover","flexGrow","onChange","e","_e$target$files","target","files","HStack","spacing","align","wrap","map","data","index","display","alignItems","pl","Checkbox","value","colorScheme","border","checked","includes","prevPermissions","concat","_toConsumableArray","filter","permission","handleCheckboxChange","_dark","title","justifyContent","mx","Button","w","DevTool"],"sourceRoot":""}